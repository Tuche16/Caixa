/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package View;

import Controller.ProdutoController;
import Controller.FornecedorController;
import java.awt.Graphics2D;
import java.awt.HeadlessException;
import java.awt.Image;
import java.awt.Toolkit;
import java.awt.event.KeyEvent;
import java.awt.geom.AffineTransform;
import java.awt.image.BufferedImage;
import java.io.ByteArrayInputStream;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.InputStream;
import java.net.URL;
import java.sql.Blob;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.imageio.ImageIO;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileFilter;
import javax.swing.filechooser.FileNameExtensionFilter;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Pedro
 */
public class InterfaceProduto extends javax.swing.JFrame {
    URL url = this.getClass().getResource("/Imagens/Icone.png");  
    Image iconeTitulo = Toolkit.getDefaultToolkit().getImage(url);  
    private final ProdutoController produtoController = new ProdutoController();
    private final FornecedorController fornecedorController =  new FornecedorController();
    private ResultSet rst;
    int cont=0;
    private String nomeAntigo,entradaAntigo, tipoAntigo, descricaoAntigo;
    private int codigoAntigo;
    private float precoAntigo,quantidadeAntigo;
    private File file;
    /**
     * Creates new form InterfaceProduto
     */
    public InterfaceProduto() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        msgConfirmaRmv = new javax.swing.JDialog();
        painelSair = new javax.swing.JPanel();
        btSimRmv = new javax.swing.JButton();
        btNaoRmv = new javax.swing.JButton();
        painelProduto = new javax.swing.JPanel();
        btRemoverProdutoP = new javax.swing.JButton();
        btAlterarProdutoP = new javax.swing.JButton();
        btConsultarProdutoP = new javax.swing.JButton();
        btAddProdutoP = new javax.swing.JButton();
        btVoltarP = new javax.swing.JButton();
        painelCamadaProduto = new javax.swing.JLayeredPane();
        painelAddProduto = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        campoNomeAdd = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        campoPrecoAdd = new javax.swing.JTextField();
        campoQuantidadeAdd = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        btAddProduto = new javax.swing.JButton();
        btLimparAdd = new javax.swing.JButton();
        btImgAdd = new javax.swing.JButton();
        lbImagemAdd = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        campoDescricaoAdd = new javax.swing.JTextArea();
        radioUnd = new javax.swing.JRadioButton();
        radioPeso = new javax.swing.JRadioButton();
        jLabel12 = new javax.swing.JLabel();
        campoCodFornecedor = new javax.swing.JSpinner();
        painelRmvProduto = new javax.swing.JPanel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        comboFormaRmv = new javax.swing.JComboBox<>();
        lbFormaPesquisaRmv = new javax.swing.JLabel();
        campoNomeCodRmv = new javax.swing.JTextField();
        btBuscarRmv = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        tbProdutoRmv = new javax.swing.JTable();
        btRmvProduto = new javax.swing.JButton();
        painelAltProduto = new javax.swing.JPanel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        comboFormaAlt = new javax.swing.JComboBox<>();
        lbFormaPesquisaAlt = new javax.swing.JLabel();
        campoNomeCodAlt = new javax.swing.JTextField();
        btBuscarAlt = new javax.swing.JButton();
        jScrollPane4 = new javax.swing.JScrollPane();
        tbProdutoAlt = new javax.swing.JTable();
        painelPsqProduto = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        lbFormaPesquisa = new javax.swing.JLabel();
        campoNomeCod = new javax.swing.JTextField();
        btBuscarProduto = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tbProduto = new javax.swing.JTable();
        comboFormaPesquisa = new javax.swing.JComboBox<>();
        lbImgPsq = new javax.swing.JLabel();

        msgConfirmaRmv.setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        msgConfirmaRmv.setTitle("Deseja realmente remover o produto?");
        msgConfirmaRmv.setAlwaysOnTop(true);
        msgConfirmaRmv.setIconImage(iconeTitulo);
        msgConfirmaRmv.setLocation(new java.awt.Point(500, 250));
        msgConfirmaRmv.setMinimumSize(new java.awt.Dimension(265, 70));
        msgConfirmaRmv.setResizable(false);

        painelSair.setPreferredSize(new java.awt.Dimension(265, 70));

        btSimRmv.setText("Sim");
        btSimRmv.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btSimRmv.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btSimRmvActionPerformed(evt);
            }
        });

        btNaoRmv.setText("NÃ£o");
        btNaoRmv.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btNaoRmv.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btNaoRmvActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout painelSairLayout = new javax.swing.GroupLayout(painelSair);
        painelSair.setLayout(painelSairLayout);
        painelSairLayout.setHorizontalGroup(
            painelSairLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(painelSairLayout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addComponent(btSimRmv, javax.swing.GroupLayout.DEFAULT_SIZE, 87, Short.MAX_VALUE)
                .addGap(42, 42, 42)
                .addComponent(btNaoRmv, javax.swing.GroupLayout.DEFAULT_SIZE, 88, Short.MAX_VALUE)
                .addGap(24, 24, 24))
        );
        painelSairLayout.setVerticalGroup(
            painelSairLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, painelSairLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(painelSairLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btSimRmv)
                    .addComponent(btNaoRmv))
                .addGap(3, 3, 3))
        );

        javax.swing.GroupLayout msgConfirmaRmvLayout = new javax.swing.GroupLayout(msgConfirmaRmv.getContentPane());
        msgConfirmaRmv.getContentPane().setLayout(msgConfirmaRmvLayout);
        msgConfirmaRmvLayout.setHorizontalGroup(
            msgConfirmaRmvLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(painelSair, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        msgConfirmaRmvLayout.setVerticalGroup(
            msgConfirmaRmvLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(painelSair, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Gerenciamento de produtos");
        setIconImage(iconeTitulo);
        setLocation(new java.awt.Point(100, 100));
        setResizable(false);

        this.painelAddProduto.setVisible(true);
        this.painelRmvProduto.setVisible(false);
        this.painelAltProduto.setVisible(false);
        this.painelPsqProduto.setVisible(false);

        btRemoverProdutoP.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagens/Remover produto.png"))); // NOI18N
        btRemoverProdutoP.setText("Remover produto");
        btRemoverProdutoP.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btRemoverProdutoP.setMaximumSize(new java.awt.Dimension(389, 265));
        btRemoverProdutoP.setMinimumSize(new java.awt.Dimension(389, 265));
        btRemoverProdutoP.setPreferredSize(new java.awt.Dimension(389, 265));
        btRemoverProdutoP.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btRemoverProdutoPActionPerformed(evt);
            }
        });

        btAlterarProdutoP.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagens/Editar produto.png"))); // NOI18N
        btAlterarProdutoP.setText("Alterar produto");
        btAlterarProdutoP.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btAlterarProdutoP.setMaximumSize(new java.awt.Dimension(389, 265));
        btAlterarProdutoP.setMinimumSize(new java.awt.Dimension(389, 265));
        btAlterarProdutoP.setPreferredSize(new java.awt.Dimension(389, 265));
        btAlterarProdutoP.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btAlterarProdutoPActionPerformed(evt);
            }
        });

        btConsultarProdutoP.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagens/Consultar produto.png"))); // NOI18N
        btConsultarProdutoP.setText("Consultar produto");
        btConsultarProdutoP.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btConsultarProdutoP.setMaximumSize(new java.awt.Dimension(389, 265));
        btConsultarProdutoP.setMinimumSize(new java.awt.Dimension(389, 265));
        btConsultarProdutoP.setPreferredSize(new java.awt.Dimension(389, 265));
        btConsultarProdutoP.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btConsultarProdutoPActionPerformed(evt);
            }
        });

        btAddProdutoP.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagens/Adicionar produto.png"))); // NOI18N
        btAddProdutoP.setText("Adicionar produto");
        btAddProdutoP.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btAddProdutoP.setEnabled(false);
        btAddProdutoP.setMaximumSize(new java.awt.Dimension(389, 265));
        btAddProdutoP.setMinimumSize(new java.awt.Dimension(389, 265));
        btAddProdutoP.setPreferredSize(new java.awt.Dimension(389, 265));
        btAddProdutoP.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btAddProdutoPActionPerformed(evt);
            }
        });

        btVoltarP.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagens/Voltar.png"))); // NOI18N
        btVoltarP.setText("Voltar");
        btVoltarP.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btVoltarP.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btVoltarPActionPerformed(evt);
            }
        });

        painelCamadaProduto.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED, java.awt.Color.lightGray, java.awt.Color.white, java.awt.Color.darkGray, java.awt.Color.gray));

        jLabel1.setText("Nome do produto");

        campoNomeAdd.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                campoNomeAddKeyReleased(evt);
            }
        });

        jLabel2.setText("PreÃ§o");

        campoPrecoAdd.setEnabled(false);
        campoPrecoAdd.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                campoPrecoAddKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                campoPrecoAddKeyTyped(evt);
            }
        });

        campoQuantidadeAdd.setEnabled(false);
        campoQuantidadeAdd.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                campoQuantidadeAddKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                campoQuantidadeAddKeyTyped(evt);
            }
        });

        jLabel3.setText("Quantidade");

        jLabel5.setText("DescriÃ§Ã£o (opcional)");

        btAddProduto.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagens/Finalizar adicionado.png"))); // NOI18N
        btAddProduto.setText("Adicionar");
        btAddProduto.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btAddProduto.setEnabled(false);
        btAddProduto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btAddProdutoActionPerformed(evt);
            }
        });

        btLimparAdd.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagens/Limpar campos.png"))); // NOI18N
        btLimparAdd.setText("Limpar campos");
        btLimparAdd.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btLimparAdd.setEnabled(false);
        btLimparAdd.setMaximumSize(new java.awt.Dimension(139, 31));
        btLimparAdd.setMinimumSize(new java.awt.Dimension(139, 31));
        btLimparAdd.setPreferredSize(new java.awt.Dimension(139, 31));
        btLimparAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btLimparAddActionPerformed(evt);
            }
        });

        btImgAdd.setText("Carregar imagem");
        btImgAdd.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btImgAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btImgAddActionPerformed(evt);
            }
        });

        lbImagemAdd.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(0, 102, 102));
        jLabel4.setText("ADICIONAR PRODUTO");

        campoDescricaoAdd.setColumns(20);
        campoDescricaoAdd.setRows(5);
        jScrollPane2.setViewportView(campoDescricaoAdd);

        radioUnd.setSelected(true);
        radioUnd.setText("Unidade");
        radioUnd.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                radioUndStateChanged(evt);
            }
        });
        radioUnd.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                radioUndMouseClicked(evt);
            }
        });

        radioPeso.setText("Peso");
        radioPeso.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                radioPesoStateChanged(evt);
            }
        });
        radioPeso.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                radioPesoMouseClicked(evt);
            }
        });
        radioPeso.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                radioPesoActionPerformed(evt);
            }
        });

        jLabel12.setText("CÃ³digo do fornecedor");

        campoCodFornecedor.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                campoCodFornecedorStateChanged(evt);
            }
        });

        javax.swing.GroupLayout painelAddProdutoLayout = new javax.swing.GroupLayout(painelAddProduto);
        painelAddProduto.setLayout(painelAddProdutoLayout);
        painelAddProdutoLayout.setHorizontalGroup(
            painelAddProdutoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(painelAddProdutoLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(painelAddProdutoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(painelAddProdutoLayout.createSequentialGroup()
                        .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, 243, Short.MAX_VALUE)
                        .addGap(880, 880, 880))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, painelAddProdutoLayout.createSequentialGroup()
                        .addGroup(painelAddProdutoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(painelAddProdutoLayout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(btLimparAdd, javax.swing.GroupLayout.PREFERRED_SIZE, 165, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(btAddProduto))
                            .addGroup(painelAddProdutoLayout.createSequentialGroup()
                                .addGap(12, 12, 12)
                                .addGroup(painelAddProdutoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(painelAddProdutoLayout.createSequentialGroup()
                                        .addGroup(painelAddProdutoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(painelAddProdutoLayout.createSequentialGroup()
                                                .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 196, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addComponent(btImgAdd))
                                            .addComponent(jScrollPane2))
                                        .addGap(10, 10, 10))
                                    .addGroup(painelAddProdutoLayout.createSequentialGroup()
                                        .addGroup(painelAddProdutoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(painelAddProdutoLayout.createSequentialGroup()
                                                .addComponent(jLabel12)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                .addComponent(campoCodFornecedor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addGroup(painelAddProdutoLayout.createSequentialGroup()
                                                .addGap(21, 21, 21)
                                                .addComponent(jLabel1)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                .addComponent(campoNomeAdd, javax.swing.GroupLayout.PREFERRED_SIZE, 284, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addGroup(painelAddProdutoLayout.createSequentialGroup()
                                                .addGap(51, 51, 51)
                                                .addGroup(painelAddProdutoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                                    .addComponent(jLabel3)
                                                    .addComponent(jLabel2))
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                .addGroup(painelAddProdutoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                    .addComponent(campoPrecoAdd)
                                                    .addComponent(campoQuantidadeAdd, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                .addGap(18, 18, 18)
                                                .addComponent(radioUnd)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                .addComponent(radioPeso)))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                                .addComponent(lbImagemAdd, javax.swing.GroupLayout.PREFERRED_SIZE, 310, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(29, 29, 29))))
        );
        painelAddProdutoLayout.setVerticalGroup(
            painelAddProdutoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(painelAddProdutoLayout.createSequentialGroup()
                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(30, 30, 30)
                .addGroup(painelAddProdutoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(painelAddProdutoLayout.createSequentialGroup()
                        .addGroup(painelAddProdutoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(campoNomeAdd, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(painelAddProdutoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel12)
                            .addComponent(campoCodFornecedor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(painelAddProdutoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(campoPrecoAdd, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(painelAddProdutoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(campoQuantidadeAdd, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(radioUnd)
                            .addComponent(radioPeso))
                        .addGap(18, 18, 18)
                        .addGroup(painelAddProdutoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(painelAddProdutoLayout.createSequentialGroup()
                                .addGap(8, 8, 8)
                                .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(btImgAdd))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 154, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(lbImagemAdd, javax.swing.GroupLayout.PREFERRED_SIZE, 370, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(painelAddProdutoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btLimparAdd, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btAddProduto))
                .addContainerGap())
        );

        jLabel8.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(0, 102, 102));
        jLabel8.setText("REMOVER PRODUTOS");

        jLabel9.setText("Forma de pesquisa");

        comboFormaRmv.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Todos produtos", "Nome do produto", "CÃ³digo do produto" }));
        comboFormaRmv.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        comboFormaRmv.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                comboFormaRmvItemStateChanged(evt);
            }
        });

        lbFormaPesquisaRmv.setText("Todos produtos");

        campoNomeCodRmv.setEnabled(false);
        campoNomeCodRmv.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                campoNomeCodRmvKeyTyped(evt);
            }
        });

        btBuscarRmv.setText("Buscar");
        btBuscarRmv.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btBuscarRmv.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btBuscarRmvActionPerformed(evt);
            }
        });

        tbProdutoRmv.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "CÃ³digo", "Nome", "Fornecedor", "Valor unitÃ¡rio", "Quantidade", "Data de entrada", "Tipo", "DescriÃ§Ã£o"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.Integer.class, java.lang.Float.class, java.lang.Float.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tbProdutoRmv.getTableHeader().setReorderingAllowed(false);
        tbProdutoRmv.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tbProdutoRmvMouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(tbProdutoRmv);

        btRmvProduto.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagens/Finalizar removido.png"))); // NOI18N
        btRmvProduto.setText("Remover produto");
        btRmvProduto.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btRmvProduto.setEnabled(false);
        btRmvProduto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btRmvProdutoActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout painelRmvProdutoLayout = new javax.swing.GroupLayout(painelRmvProduto);
        painelRmvProduto.setLayout(painelRmvProdutoLayout);
        painelRmvProdutoLayout.setHorizontalGroup(
            painelRmvProdutoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(painelRmvProdutoLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 232, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, painelRmvProdutoLayout.createSequentialGroup()
                .addGap(6, 6, 6)
                .addGroup(painelRmvProdutoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, painelRmvProdutoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 1079, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(lbFormaPesquisaRmv)
                        .addGroup(painelRmvProdutoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(painelRmvProdutoLayout.createSequentialGroup()
                                .addComponent(jLabel9)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(comboFormaRmv, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, painelRmvProdutoLayout.createSequentialGroup()
                                .addComponent(campoNomeCodRmv, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btBuscarRmv, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addComponent(btRmvProduto, javax.swing.GroupLayout.Alignment.TRAILING))
                .addGap(26, 26, 26))
        );
        painelRmvProdutoLayout.setVerticalGroup(
            painelRmvProdutoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(painelRmvProdutoLayout.createSequentialGroup()
                .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(30, 30, 30)
                .addGroup(painelRmvProdutoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(comboFormaRmv, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(lbFormaPesquisaRmv)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(painelRmvProdutoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(campoNomeCodRmv, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btBuscarRmv))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 243, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btRmvProduto)
                .addContainerGap())
        );

        jLabel10.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(0, 102, 102));
        jLabel10.setText("ALTERAR PRODUTOS");

        jLabel11.setText("Forma de pesquisa");

        comboFormaAlt.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Todos produtos", "Nome do produto", "CÃ³digo do produto" }));
        comboFormaAlt.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        comboFormaAlt.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                comboFormaAltItemStateChanged(evt);
            }
        });

        lbFormaPesquisaAlt.setText("Todos produtos");

        campoNomeCodAlt.setEnabled(false);
        campoNomeCodAlt.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                campoNomeCodAltKeyTyped(evt);
            }
        });

        btBuscarAlt.setText("Buscar");
        btBuscarAlt.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btBuscarAlt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btBuscarAltActionPerformed(evt);
            }
        });

        tbProdutoAlt.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "CÃ³digo", "Nome", "Fornecedor", "Valor unitÃ¡rio", "Quantidade", "Data de entrada", "Tipo", "DescriÃ§Ã£o"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.Integer.class, java.lang.Float.class, java.lang.Float.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, true, true, true, true, false, true, true
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tbProdutoAlt.getTableHeader().setReorderingAllowed(false);
        tbProdutoAlt.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tbProdutoAltMouseClicked(evt);
            }
        });
        tbProdutoAlt.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                tbProdutoAltPropertyChange(evt);
            }
        });
        jScrollPane4.setViewportView(tbProdutoAlt);

        javax.swing.GroupLayout painelAltProdutoLayout = new javax.swing.GroupLayout(painelAltProduto);
        painelAltProduto.setLayout(painelAltProdutoLayout);
        painelAltProdutoLayout.setHorizontalGroup(
            painelAltProdutoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(painelAltProdutoLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 232, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, painelAltProdutoLayout.createSequentialGroup()
                .addGap(6, 6, 6)
                .addGroup(painelAltProdutoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 1079, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lbFormaPesquisaAlt)
                    .addGroup(painelAltProdutoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addGroup(painelAltProdutoLayout.createSequentialGroup()
                            .addComponent(jLabel11)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(comboFormaAlt, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, painelAltProdutoLayout.createSequentialGroup()
                            .addComponent(campoNomeCodAlt, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(btBuscarAlt, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(26, 26, 26))
        );
        painelAltProdutoLayout.setVerticalGroup(
            painelAltProdutoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(painelAltProdutoLayout.createSequentialGroup()
                .addGap(0, 0, 0)
                .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(30, 30, 30)
                .addGroup(painelAltProdutoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel11)
                    .addComponent(comboFormaAlt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(lbFormaPesquisaAlt)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(painelAltProdutoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(campoNomeCodAlt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btBuscarAlt))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 304, Short.MAX_VALUE)
                .addContainerGap())
        );

        painelPsqProduto.setPreferredSize(new java.awt.Dimension(1113, 395));

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(0, 102, 102));
        jLabel6.setText("CONSULTAR PRODUTOS");

        jLabel7.setText("Forma de pesquisa");

        lbFormaPesquisa.setText("Todos produtos");

        campoNomeCod.setEnabled(false);
        campoNomeCod.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                campoNomeCodKeyTyped(evt);
            }
        });

        btBuscarProduto.setText("Buscar");
        btBuscarProduto.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btBuscarProduto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btBuscarProdutoActionPerformed(evt);
            }
        });

        tbProduto.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "CÃ³digo", "Nome", "Fornecedor", "Valor unitÃ¡rio", "Quantidade", "Data de entrada", "Tipo", "DescriÃ§Ã£o"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.Integer.class, java.lang.Float.class, java.lang.Float.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tbProduto.getTableHeader().setReorderingAllowed(false);
        tbProduto.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tbProdutoMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tbProduto);

        comboFormaPesquisa.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Todos produtos", "Nome do produto", "CÃ³digo do produto" }));
        comboFormaPesquisa.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        comboFormaPesquisa.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                comboFormaPesquisaItemStateChanged(evt);
            }
        });

        lbImgPsq.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        javax.swing.GroupLayout painelPsqProdutoLayout = new javax.swing.GroupLayout(painelPsqProduto);
        painelPsqProduto.setLayout(painelPsqProdutoLayout);
        painelPsqProdutoLayout.setHorizontalGroup(
            painelPsqProdutoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(painelPsqProdutoLayout.createSequentialGroup()
                .addGroup(painelPsqProdutoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(painelPsqProdutoLayout.createSequentialGroup()
                        .addGap(24, 24, 24)
                        .addGroup(painelPsqProdutoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lbFormaPesquisa)
                            .addGroup(painelPsqProdutoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addGroup(painelPsqProdutoLayout.createSequentialGroup()
                                    .addComponent(jLabel7)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(comboFormaPesquisa, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, painelPsqProdutoLayout.createSequentialGroup()
                                    .addComponent(campoNomeCod, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(btBuscarProduto, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(painelPsqProdutoLayout.createSequentialGroup()
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 804, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(31, 31, 31)
                                .addComponent(lbImgPsq, javax.swing.GroupLayout.PREFERRED_SIZE, 255, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(painelPsqProdutoLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 232, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        painelPsqProdutoLayout.setVerticalGroup(
            painelPsqProdutoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(painelPsqProdutoLayout.createSequentialGroup()
                .addGap(0, 0, 0)
                .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(30, 30, 30)
                .addGroup(painelPsqProdutoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(comboFormaPesquisa, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(lbFormaPesquisa)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(painelPsqProdutoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(campoNomeCod, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btBuscarProduto))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(painelPsqProdutoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lbImgPsq, javax.swing.GroupLayout.PREFERRED_SIZE, 305, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addContainerGap())
        );

        painelCamadaProduto.setLayer(painelAddProduto, javax.swing.JLayeredPane.DEFAULT_LAYER);
        painelCamadaProduto.setLayer(painelRmvProduto, javax.swing.JLayeredPane.DEFAULT_LAYER);
        painelCamadaProduto.setLayer(painelAltProduto, javax.swing.JLayeredPane.DEFAULT_LAYER);
        painelCamadaProduto.setLayer(painelPsqProduto, javax.swing.JLayeredPane.DEFAULT_LAYER);

        javax.swing.GroupLayout painelCamadaProdutoLayout = new javax.swing.GroupLayout(painelCamadaProduto);
        painelCamadaProduto.setLayout(painelCamadaProdutoLayout);
        painelCamadaProdutoLayout.setHorizontalGroup(
            painelCamadaProdutoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(painelAddProduto, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(painelCamadaProdutoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(painelRmvProduto, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(painelCamadaProdutoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(painelAltProduto, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(painelCamadaProdutoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(painelPsqProduto, javax.swing.GroupLayout.DEFAULT_SIZE, 1133, Short.MAX_VALUE))
        );
        painelCamadaProdutoLayout.setVerticalGroup(
            painelCamadaProdutoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(painelAddProduto, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(painelCamadaProdutoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(painelRmvProduto, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(painelCamadaProdutoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(painelAltProduto, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(painelCamadaProdutoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(painelPsqProduto, javax.swing.GroupLayout.PREFERRED_SIZE, 457, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout painelProdutoLayout = new javax.swing.GroupLayout(painelProduto);
        painelProduto.setLayout(painelProdutoLayout);
        painelProdutoLayout.setHorizontalGroup(
            painelProdutoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(painelProdutoLayout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addGroup(painelProdutoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(painelProdutoLayout.createSequentialGroup()
                        .addComponent(btAddProdutoP, javax.swing.GroupLayout.PREFERRED_SIZE, 1, Short.MAX_VALUE)
                        .addGap(102, 102, 102)
                        .addComponent(btRemoverProdutoP, javax.swing.GroupLayout.PREFERRED_SIZE, 1, Short.MAX_VALUE)
                        .addGap(102, 102, 102)
                        .addComponent(btAlterarProdutoP, javax.swing.GroupLayout.PREFERRED_SIZE, 1, Short.MAX_VALUE)
                        .addGap(102, 102, 102)
                        .addComponent(btConsultarProdutoP, javax.swing.GroupLayout.PREFERRED_SIZE, 1, Short.MAX_VALUE))
                    .addComponent(painelCamadaProduto)
                    .addGroup(painelProdutoLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(btVoltarP)))
                .addGap(19, 19, 19))
        );
        painelProdutoLayout.setVerticalGroup(
            painelProdutoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(painelProdutoLayout.createSequentialGroup()
                .addGap(9, 9, 9)
                .addGroup(painelProdutoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(painelProdutoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(btAlterarProdutoP, javax.swing.GroupLayout.PREFERRED_SIZE, 52, Short.MAX_VALUE)
                        .addComponent(btConsultarProdutoP, javax.swing.GroupLayout.PREFERRED_SIZE, 52, Short.MAX_VALUE))
                    .addGroup(painelProdutoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(btAddProdutoP, javax.swing.GroupLayout.PREFERRED_SIZE, 52, Short.MAX_VALUE)
                        .addComponent(btRemoverProdutoP, javax.swing.GroupLayout.PREFERRED_SIZE, 52, Short.MAX_VALUE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(painelCamadaProduto)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btVoltarP, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(5, 5, 5))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(painelProduto, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(painelProduto, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btVoltarPActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btVoltarPActionPerformed
        limparCamposPsq();
        limparCamposAdd();
        this.dispose();
    }//GEN-LAST:event_btVoltarPActionPerformed
    
    
    private void listarProdutos(int rmvPsq){
        rst=this.produtoController.listarProdutos();
        DefaultTableModel model;
        switch (rmvPsq) {
            case 1:
                model = (DefaultTableModel) this.tbProdutoRmv.getModel();
                break;
            case 2:
                model = (DefaultTableModel) this.tbProduto.getModel();
                break;
            default:
                model = (DefaultTableModel) this.tbProdutoAlt.getModel();
                break;
        }
        try{
            model.addRow(new Object[]{rst.getInt("idproduto"),rst.getString("nome"),rst.getInt("idFornecedor"),rst.getFloat("valorUnit"),rst.getFloat("quantidade"),rst.getString("entrada"),rst.getString("tipo"),rst.getString("descricao")});
            while(rst.next()){
                model.addRow(new Object[]{rst.getInt("idproduto"),rst.getString("nome"),rst.getInt("idFornecedor"),rst.getFloat("valorUnit"),rst.getFloat("quantidade"),rst.getString("entrada"),rst.getString("tipo"),rst.getString("descricao")});
            }
        }
        catch(SQLException e){}
    }
    
    private void btAddProdutoPActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btAddProdutoPActionPerformed
        limparCamposPsq();
        limparCamposRmv();
        limparCamposAlt();
        this.campoPrecoAdd.setEnabled(false);
        this.campoQuantidadeAdd.setEnabled(false);
        this.btAddProduto.setEnabled(false);
        this.btLimparAdd.setEnabled(false);
        this.btAddProdutoP.setEnabled(false);
        this.btRemoverProdutoP.setEnabled(true);
        this.btAlterarProdutoP.setEnabled(true);
        this.btConsultarProdutoP.setEnabled(true);
        this.painelAddProduto.setVisible(true);
        this.painelRmvProduto.setVisible(false);
        this.painelAltProduto.setVisible(false);
        this.painelPsqProduto.setVisible(false);
    }//GEN-LAST:event_btAddProdutoPActionPerformed

    private void btRemoverProdutoPActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btRemoverProdutoPActionPerformed
        limparCamposPsq();
        limparCamposAdd();
        limparCamposAlt();
        this.listarProdutos(1);
        this.btRmvProduto.setEnabled(false);
        this.btAddProdutoP.setEnabled(true);
        this.btRemoverProdutoP.setEnabled(false);
        this.btAlterarProdutoP.setEnabled(true);
        this.btConsultarProdutoP.setEnabled(true);
        this.painelAddProduto.setVisible(false);
        this.painelRmvProduto.setVisible(true);
        this.painelAltProduto.setVisible(false);
        this.painelPsqProduto.setVisible(false);
        DefaultTableCellRenderer centerRenderer = new DefaultTableCellRenderer();
        centerRenderer.setHorizontalAlignment( JLabel.CENTER );
        for(int x=0;x<this.tbProdutoRmv.getColumnCount();x++){
            this.tbProdutoRmv.getColumnModel().getColumn(x).setCellRenderer( centerRenderer );
        }
    }//GEN-LAST:event_btRemoverProdutoPActionPerformed

    private void btAlterarProdutoPActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btAlterarProdutoPActionPerformed
        limparCamposPsq();
        limparCamposAdd();
        limparCamposRmv();
        this.listarProdutos(3);
        this.btAddProdutoP.setEnabled(true);
        this.btRemoverProdutoP.setEnabled(true);
        this.btAlterarProdutoP.setEnabled(false);
        this.btConsultarProdutoP.setEnabled(true);
        this.painelAddProduto.setVisible(false);
        this.painelRmvProduto.setVisible(false);
        this.painelAltProduto.setVisible(true);
        this.painelPsqProduto.setVisible(false);
        DefaultTableCellRenderer centerRenderer = new DefaultTableCellRenderer();
        centerRenderer.setHorizontalAlignment( JLabel.CENTER );
        for(int x=0;x<this.tbProdutoAlt.getColumnCount();x++){
            this.tbProdutoAlt.getColumnModel().getColumn(x).setCellRenderer( centerRenderer );
        }
    }//GEN-LAST:event_btAlterarProdutoPActionPerformed

    private void btConsultarProdutoPActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btConsultarProdutoPActionPerformed
        this.listarProdutos(2);
        limparCamposAdd();
        limparCamposRmv();
        limparCamposAlt();
        this.btAddProdutoP.setEnabled(true);
        this.btRemoverProdutoP.setEnabled(true);
        this.btAlterarProdutoP.setEnabled(true);
        this.btConsultarProdutoP.setEnabled(false);
        this.painelAddProduto.setVisible(false);
        this.painelRmvProduto.setVisible(false);
        this.painelAltProduto.setVisible(false);
        this.painelPsqProduto.setVisible(true);
        DefaultTableCellRenderer centerRenderer = new DefaultTableCellRenderer();
        centerRenderer.setHorizontalAlignment( JLabel.CENTER );
        for(int x=0;x<this.tbProduto.getColumnCount();x++){
            this.tbProduto.getColumnModel().getColumn(x).setCellRenderer( centerRenderer );
        }        
    }//GEN-LAST:event_btConsultarProdutoPActionPerformed

    private void radioUndStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_radioUndStateChanged
        if(this.radioUnd.isSelected()){
            this.radioPeso.setSelected(false);
        }
        else{
            this.radioPeso.setSelected(true);
        }
    }//GEN-LAST:event_radioUndStateChanged

    private void radioPesoStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_radioPesoStateChanged
        if(this.radioPeso.isSelected()){
            this.radioUnd.setSelected(false);
        }
        else{
            this.radioUnd.setSelected(true);
        }
    }//GEN-LAST:event_radioPesoStateChanged

    private void radioUndMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_radioUndMouseClicked
        if(this.radioUnd.isSelected()){
            this.radioUnd.setSelected(true);
        }

    }//GEN-LAST:event_radioUndMouseClicked

    private void radioPesoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_radioPesoMouseClicked
        if(this.radioPeso.isSelected()){
            this.radioPeso.setSelected(true);
        }
    }//GEN-LAST:event_radioPesoMouseClicked

    private void btImgAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btImgAddActionPerformed
        JFileChooser filechooser =new JFileChooser();
        filechooser.setDialogTitle("Escolha a imagem");
        filechooser.setFileSelectionMode(JFileChooser.FILES_ONLY);
 
        int returnval=filechooser.showOpenDialog(this);
        if(returnval==JFileChooser.APPROVE_OPTION)
        {
            file = filechooser.getSelectedFile();
            BufferedImage bi;
            try
            {   
                bi=ImageIO.read(file);
                this.lbImagemAdd.setIcon(new ImageIcon(bi.getScaledInstance(this.lbImagemAdd.getWidth(), this.lbImagemAdd.getHeight(),Image.SCALE_SMOOTH)));
            }
            catch(IOException e){}
            this.pack();
        }
    }//GEN-LAST:event_btImgAddActionPerformed

    private void btLimparAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btLimparAddActionPerformed
        limparCamposAdd();
        this.campoPrecoAdd.setEnabled(false);
        this.campoQuantidadeAdd.setEnabled(false);
        this.campoCodFornecedor.setValue(0);
        this.btLimparAdd.setEnabled(false);
        this.btAddProduto.setEnabled(false);
    }//GEN-LAST:event_btLimparAddActionPerformed

    private void btAddProdutoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btAddProdutoActionPerformed
        try{ 
            String tipo;
            if(this.radioPeso.isSelected()){
                tipo="peso";
            }
            else{
                tipo="und";
            }
            if((Integer)this.campoCodFornecedor.getValue()>0){
                if(this.file.length()==0){
                    this.produtoController.adicionarProduto(this.campoNomeAdd.getText(),(Integer)this.campoCodFornecedor.getValue(), Float.parseFloat(this.campoPrecoAdd.getText()), Float.parseFloat(this.campoQuantidadeAdd.getText()), tipo, this.campoDescricaoAdd.getText(),null);
                    JOptionPane.showMessageDialog(null,"Produto adicionado com sucesso!","ATENÃÃO",JOptionPane.INFORMATION_MESSAGE);
                }
                else{
                    FileInputStream fis=new FileInputStream(file);
                    this.produtoController.adicionarProduto(this.campoNomeAdd.getText(),(Integer)this.campoCodFornecedor.getValue(), Float.parseFloat(this.campoPrecoAdd.getText()), Float.parseFloat(this.campoQuantidadeAdd.getText()), tipo, this.campoDescricaoAdd.getText(),fis);
                    JOptionPane.showMessageDialog(null,"Produto adicionado com sucesso!","ATENÃÃO",JOptionPane.INFORMATION_MESSAGE);
                }
            }
            else{
                JOptionPane.showMessageDialog(null,"Informe o cÃ³digo do fornecedor!","ATENÃÃO",JOptionPane.INFORMATION_MESSAGE);
            }
        }
        catch(HeadlessException | NumberFormatException e){
            JOptionPane.showMessageDialog(null,"Preencha os campos corretamente!","ATENÃÃO",JOptionPane.INFORMATION_MESSAGE);
        } catch (FileNotFoundException ex) {
            Logger.getLogger(InterfaceProduto.class.getName()).log(Level.SEVERE, null, ex);
        }
        limparCamposAdd();
    }//GEN-LAST:event_btAddProdutoActionPerformed

    private void comboFormaPesquisaItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_comboFormaPesquisaItemStateChanged
        this.campoNomeCod.setText("");
        DefaultTableModel dm = (DefaultTableModel) this.tbProduto.getModel();
        switch (this.comboFormaPesquisa.getSelectedIndex()) {
            case 0:
                this.campoNomeCod.setEnabled(false);
                this.lbFormaPesquisa.setText("Todos produtos");
                if(cont==0){
                    this.listarProdutos(2);
                    cont++;
                }   break;
            case 1:
                {
                    int rowCount = dm.getRowCount();
                    for (int i = rowCount - 1; i >= 0; i--) {
                        dm.removeRow(i);
                    }       this.campoNomeCod.setEnabled(true);
                    this.lbFormaPesquisa.setText("Nome do produto");
                    cont=0;
                    break;
                }
            default:
                {
                    int rowCount = dm.getRowCount();
                    for (int i = rowCount - 1; i >= 0; i--) {
                        dm.removeRow(i);
                    }       this.campoNomeCod.setEnabled(true);
                    this.lbFormaPesquisa.setText("CÃ³digo do produto");
                    cont=0;
                    break;
                }
        }
        DefaultTableCellRenderer centerRenderer = new DefaultTableCellRenderer();
        centerRenderer.setHorizontalAlignment( JLabel.CENTER );
        for(int x=0;x<this.tbProduto.getColumnCount();x++){
            this.tbProduto.getColumnModel().getColumn(x).setCellRenderer( centerRenderer );
        }
    }//GEN-LAST:event_comboFormaPesquisaItemStateChanged

    private void btBuscarProdutoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btBuscarProdutoActionPerformed
        DefaultTableModel dm = (DefaultTableModel) this.tbProduto.getModel();
        if(this.comboFormaPesquisa.getSelectedIndex()==0&&this.tbProduto.getRowCount()<0){
            this.listarProdutos(2);
        }
        else if(this.comboFormaPesquisa.getSelectedIndex()==1&&!this.campoNomeCod.getText().isEmpty()){
            int rowCount = dm.getRowCount();
            for (int i = rowCount - 1; i >= 0; i--) {
                dm.removeRow(i);
            }
            rst=this.produtoController.buscarProduto(this.campoNomeCod.getText(), 0);
            DefaultTableModel model = (DefaultTableModel) this.tbProduto.getModel();
            try{
                model.addRow(new Object[]{rst.getInt("idproduto"),rst.getString("nome"),rst.getInt("idFornecedor"),rst.getFloat("valorUnit"),rst.getFloat("quantidade"),rst.getString("entrada"),rst.getString("tipo"),rst.getString("descricao")});
                while(rst.next()){
                    model.addRow(new Object[]{rst.getInt("idproduto"),rst.getString("nome"),rst.getInt("idFornecedor"),rst.getFloat("valorUnit"),rst.getFloat("quantidade"),rst.getString("entrada"),rst.getString("tipo"),rst.getString("descricao")});
                }
            }
            catch(SQLException e){
                JOptionPane.showMessageDialog(null,"NÃ£o foi encontrado nenhum produto com esse nome!","ATENÃÃO",JOptionPane.INFORMATION_MESSAGE);
            }
        }
        else if(this.comboFormaPesquisa.getSelectedIndex()==2&&!this.campoNomeCod.getText().isEmpty()){
            int rowCount = dm.getRowCount();
            for (int i = rowCount - 1; i >= 0; i--) {
                dm.removeRow(i);
            }
            rst=this.produtoController.buscarProduto("null", Integer.parseInt(this.campoNomeCod.getText()));
            DefaultTableModel model = (DefaultTableModel) this.tbProduto.getModel();
            try{
                model.addRow(new Object[]{rst.getInt("idproduto"),rst.getString("nome"),rst.getInt("idFornecedor"),rst.getFloat("valorUnit"),rst.getFloat("quantidade"),rst.getString("entrada"),rst.getString("tipo"),rst.getString("descricao")});            }
            catch(SQLException e){
                JOptionPane.showMessageDialog(null,"NÃ£o foi encontrado nenhum produto com esse cÃ³digo!","ATENÃÃO",JOptionPane.INFORMATION_MESSAGE);
            }
        }
        DefaultTableCellRenderer centerRenderer = new DefaultTableCellRenderer();
        centerRenderer.setHorizontalAlignment( JLabel.CENTER );
        for(int x=0;x<this.tbProduto.getColumnCount();x++){
            this.tbProduto.getColumnModel().getColumn(x).setCellRenderer( centerRenderer );
        }
    }//GEN-LAST:event_btBuscarProdutoActionPerformed

    private void comboFormaRmvItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_comboFormaRmvItemStateChanged
        this.campoNomeCodRmv.setText("");
        DefaultTableModel dm = (DefaultTableModel) this.tbProdutoRmv.getModel();
        switch (this.comboFormaRmv.getSelectedIndex()) {
            case 0:
                this.campoNomeCodRmv.setEnabled(false);
                this.lbFormaPesquisaRmv.setText("Todos produtos");
                if(cont==0){
                    this.listarProdutos(1);
                    cont++;
                }   this.btRmvProduto.setEnabled(false);
                break;
            case 1:
                {
                    int rowCount = dm.getRowCount();
                    for (int i = rowCount - 1; i >= 0; i--) {
                        dm.removeRow(i);
                    }       this.campoNomeCodRmv.setEnabled(true);
                    this.lbFormaPesquisaRmv.setText("Nome do produto");
                    cont=0;
                    this.btRmvProduto.setEnabled(false);
                    break;
                }
            default:
                {
                    int rowCount = dm.getRowCount();
                    for (int i = rowCount - 1; i >= 0; i--) {
                        dm.removeRow(i);
                    }       this.campoNomeCodRmv.setEnabled(true);
                    this.lbFormaPesquisaRmv.setText("CÃ³digo do produto");
                    cont=0;
                    this.btRmvProduto.setEnabled(false);
                    break;
                }
        }
        DefaultTableCellRenderer centerRenderer = new DefaultTableCellRenderer();
        centerRenderer.setHorizontalAlignment( JLabel.CENTER );
        for(int x=0;x<this.tbProdutoRmv.getColumnCount();x++){
            this.tbProdutoRmv.getColumnModel().getColumn(x).setCellRenderer( centerRenderer );
        }
    }//GEN-LAST:event_comboFormaRmvItemStateChanged

    private void btBuscarRmvActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btBuscarRmvActionPerformed
        DefaultTableModel dm = (DefaultTableModel) this.tbProdutoRmv.getModel();
        if(this.comboFormaRmv.getSelectedIndex()==0&&this.tbProdutoRmv.getRowCount()<0){
            this.listarProdutos(1);
        }
        else if(this.comboFormaRmv.getSelectedIndex()==1&&!this.campoNomeCodRmv.getText().isEmpty()){
            int rowCount = dm.getRowCount();
            for (int i = rowCount - 1; i >= 0; i--) {
                dm.removeRow(i);
            }
            rst=this.produtoController.buscarProduto(this.campoNomeCodRmv.getText(), 0);
            DefaultTableModel model = (DefaultTableModel) this.tbProdutoRmv.getModel();
            try{
                model.addRow(new Object[]{rst.getInt("idproduto"),rst.getString("nome"),rst.getInt("idFornecedor"),rst.getFloat("valorUnit"),rst.getFloat("quantidade"),rst.getString("entrada"),rst.getString("tipo"),rst.getString("descricao")});
                while(rst.next()){
                    model.addRow(new Object[]{rst.getInt("idproduto"),rst.getString("nome"),rst.getInt("idFornecedor"),rst.getFloat("valorUnit"),rst.getFloat("quantidade"),rst.getString("entrada"),rst.getString("tipo"),rst.getString("descricao")});
                }
            }
            catch(SQLException e){
                JOptionPane.showMessageDialog(null,"NÃ£o foi encontrado nenhum produto com esse nome!","ATENÃÃO",JOptionPane.INFORMATION_MESSAGE);
            }
        }
        else if(this.comboFormaRmv.getSelectedIndex()==2&&!this.campoNomeCodRmv.getText().isEmpty()){
            int rowCount = dm.getRowCount();
            for (int i = rowCount - 1; i >= 0; i--) {
                dm.removeRow(i);
            }
            rst=this.produtoController.buscarProduto("null", Integer.parseInt(this.campoNomeCodRmv.getText()));
            DefaultTableModel model = (DefaultTableModel) this.tbProdutoRmv.getModel();
            try{
                model.addRow(new Object[]{rst.getInt("idproduto"),rst.getString("nome"),rst.getInt("idFornecedor"),rst.getFloat("valorUnit"),rst.getFloat("quantidade"),rst.getString("entrada"),rst.getString("tipo"),rst.getString("descricao")});
            }
            catch(SQLException e){
                JOptionPane.showMessageDialog(null,"NÃ£o foi encontrado nenhum produto com esse cÃ³digo!","ATENÃÃO",JOptionPane.INFORMATION_MESSAGE);
            }
        }
        DefaultTableCellRenderer centerRenderer = new DefaultTableCellRenderer();
        centerRenderer.setHorizontalAlignment( JLabel.CENTER );
        for(int x=0;x<this.tbProdutoRmv.getColumnCount();x++){
            this.tbProdutoRmv.getColumnModel().getColumn(x).setCellRenderer( centerRenderer );
        }
    }//GEN-LAST:event_btBuscarRmvActionPerformed

    private void btRmvProdutoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btRmvProdutoActionPerformed
        if(tbProdutoRmv.getSelectedRowCount()>=1){
            this.msgConfirmaRmv.setVisible(true);
        }
        else{
            JOptionPane.showMessageDialog(null,"Selecione um produto!","ATENÃÃO",JOptionPane.INFORMATION_MESSAGE);
        }
    }//GEN-LAST:event_btRmvProdutoActionPerformed

    private void btSimRmvActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btSimRmvActionPerformed
        this.produtoController.removerProduto((Integer)this.tbProdutoRmv.getValueAt(this.tbProdutoRmv.getSelectedRow(),0));
        DefaultTableModel dm = (DefaultTableModel) this.tbProdutoRmv.getModel();
        if(this.comboFormaRmv.getSelectedIndex()==0){
            int rowCount = dm.getRowCount();
            for (int i = rowCount - 1; i >= 0; i--) {
                dm.removeRow(i);
            }
            this.listarProdutos(1);
        }
        else{
            int rowCount = dm.getRowCount();
            for (int i = rowCount - 1; i >= 0; i--) {
                dm.removeRow(i);
            }
        }
        JOptionPane.showMessageDialog(null,"Produto removido com sucesso!","ATENÃÃO",JOptionPane.INFORMATION_MESSAGE);
        msgConfirmaRmv.dispose();
    }//GEN-LAST:event_btSimRmvActionPerformed

    private void btNaoRmvActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btNaoRmvActionPerformed
        msgConfirmaRmv.dispose();
    }//GEN-LAST:event_btNaoRmvActionPerformed

    private void comboFormaAltItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_comboFormaAltItemStateChanged
        this.campoNomeCodAlt.setText("");
        DefaultTableModel dm = (DefaultTableModel) this.tbProdutoAlt.getModel();
        switch (this.comboFormaAlt.getSelectedIndex()) {
            case 0:
                this.campoNomeCodAlt.setEnabled(false);
                this.lbFormaPesquisaAlt.setText("Todos produtos");
                if(cont==0){
                    this.listarProdutos(3);
                    cont++;
                }   this.btRmvProduto.setEnabled(false);
                break;
            case 1:
                {
                    int rowCount = dm.getRowCount();
                    for (int i = rowCount - 1; i >= 0; i--) {
                        dm.removeRow(i);
                    }       this.campoNomeCodAlt.setEnabled(true);
                    this.lbFormaPesquisaAlt.setText("Nome do produto");
                    cont=0;
                    this.btRmvProduto.setEnabled(false);
                    break;
                }
            default:
                {
                    int rowCount = dm.getRowCount();
                    for (int i = rowCount - 1; i >= 0; i--) {
                        dm.removeRow(i);
                    }       this.campoNomeCodAlt.setEnabled(true);
                    this.lbFormaPesquisaAlt.setText("CÃ³digo do produto");
                    cont=0;
                    this.btRmvProduto.setEnabled(false);
                    break;
                }
        }
        DefaultTableCellRenderer centerRenderer = new DefaultTableCellRenderer();
        centerRenderer.setHorizontalAlignment( JLabel.CENTER );
        for(int x=0;x<this.tbProdutoAlt.getColumnCount();x++){
            this.tbProdutoAlt.getColumnModel().getColumn(x).setCellRenderer( centerRenderer );
        }
    }//GEN-LAST:event_comboFormaAltItemStateChanged

    private void btBuscarAltActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btBuscarAltActionPerformed
        DefaultTableModel dm = (DefaultTableModel) this.tbProdutoAlt.getModel();
        if(this.comboFormaAlt.getSelectedIndex()==0&&this.tbProdutoAlt.getRowCount()<0){
            this.listarProdutos(1);
        }
        else if(this.comboFormaAlt.getSelectedIndex()==1&&!this.campoNomeCodAlt.getText().isEmpty()){
            int rowCount = dm.getRowCount();
            for (int i = rowCount - 1; i >= 0; i--) {
                dm.removeRow(i);
            }
            rst=this.produtoController.buscarProduto(this.campoNomeCodAlt.getText(), 0);
            DefaultTableModel model = (DefaultTableModel) this.tbProdutoAlt.getModel();
            try{
                model.addRow(new Object[]{rst.getInt("idproduto"),rst.getString("nome"),rst.getInt("idFornecedor"),rst.getFloat("valorUnit"),rst.getFloat("quantidade"),rst.getString("entrada"),rst.getString("tipo"),rst.getString("descricao")});
                while(rst.next()){
                    model.addRow(new Object[]{rst.getInt("idproduto"),rst.getString("nome"),rst.getInt("idFornecedor"),rst.getFloat("valorUnit"),rst.getFloat("quantidade"),rst.getString("entrada"),rst.getString("tipo"),rst.getString("descricao")});
                }
            }
            catch(SQLException e){
                JOptionPane.showMessageDialog(null,"NÃ£o foi encontrado nenhum produto com esse nome!","ATENÃÃO",JOptionPane.INFORMATION_MESSAGE);
            }
        }
        else if(this.comboFormaAlt.getSelectedIndex()==2&&!this.campoNomeCodAlt.getText().isEmpty()){
            int rowCount = dm.getRowCount();
            for (int i = rowCount - 1; i >= 0; i--) {
                dm.removeRow(i);
            }
            rst=this.produtoController.buscarProduto("null", Integer.parseInt(this.campoNomeCodAlt.getText()));
            DefaultTableModel model = (DefaultTableModel) this.tbProdutoAlt.getModel();
            try{
                model.addRow(new Object[]{rst.getInt("idproduto"),rst.getString("nome"),rst.getInt("idFornecedor"),rst.getFloat("valorUnit"),rst.getFloat("quantidade"),rst.getString("entrada"),rst.getString("tipo"),rst.getString("descricao")});
            }
            catch(SQLException e){
                JOptionPane.showMessageDialog(null,"NÃ£o foi encontrado nenhum produto com esse cÃ³digo!","ATENÃÃO",JOptionPane.INFORMATION_MESSAGE);
            }
        }
        DefaultTableCellRenderer centerRenderer = new DefaultTableCellRenderer();
        centerRenderer.setHorizontalAlignment( JLabel.CENTER );
        for(int x=0;x<this.tbProdutoAlt.getColumnCount();x++){
            this.tbProdutoAlt.getColumnModel().getColumn(x).setCellRenderer( centerRenderer );
        }
    }//GEN-LAST:event_btBuscarAltActionPerformed

    private void tbProdutoAltPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_tbProdutoAltPropertyChange
        if(this.tbProdutoAlt.getSelectedRow()>=0){
            if(!String.valueOf(this.tbProdutoAlt.getValueAt(this.tbProdutoAlt.getSelectedRow(), 1)).equals(nomeAntigo)||
               (Float) this.tbProdutoAlt.getValueAt(this.tbProdutoAlt.getSelectedRow(), 2)!=precoAntigo||
               (Float) this.tbProdutoAlt.getValueAt(this.tbProdutoAlt.getSelectedRow(), 3)!=quantidadeAntigo||
               !String.valueOf(this.tbProdutoAlt.getValueAt(this.tbProdutoAlt.getSelectedRow(), 5)).equals(tipoAntigo)||
               !String.valueOf(this.tbProdutoAlt.getValueAt(this.tbProdutoAlt.getSelectedRow(), 6)).equals(descricaoAntigo))
            {
                this.produtoController.alterarProduto((Integer) this.tbProdutoAlt.getValueAt(this.tbProdutoAlt.getSelectedRow(), 0),
                        String.valueOf(this.tbProdutoAlt.getValueAt(this.tbProdutoAlt.getSelectedRow(), 1)),
                        (Integer)this.tbProdutoAlt.getValueAt(this.tbProdutoAlt.getSelectedRow(), 2),
                       (Float) this.tbProdutoAlt.getValueAt(this.tbProdutoAlt.getSelectedRow(), 3),
                       (Float) this.tbProdutoAlt.getValueAt(this.tbProdutoAlt.getSelectedRow(), 4),
                       String.valueOf(this.tbProdutoAlt.getValueAt(this.tbProdutoAlt.getSelectedRow(), 6)),
                       String.valueOf(this.tbProdutoAlt.getValueAt(this.tbProdutoAlt.getSelectedRow(), 7))
                );
            }
        }   
    }//GEN-LAST:event_tbProdutoAltPropertyChange

    private void tbProdutoAltMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tbProdutoAltMouseClicked
        if(this.tbProdutoAlt.getSelectedRow()>=0){
            nomeAntigo =String.valueOf(this.tbProdutoAlt.getValueAt(this.tbProdutoAlt.getSelectedRow(), 1));
            precoAntigo = (Float) this.tbProdutoAlt.getValueAt(this.tbProdutoAlt.getSelectedRow(), 2);
            quantidadeAntigo = (Float) this.tbProdutoAlt.getValueAt(this.tbProdutoAlt.getSelectedRow(), 3);
            tipoAntigo = String.valueOf(this.tbProdutoAlt.getValueAt(this.tbProdutoAlt.getSelectedRow(), 5));
            descricaoAntigo = String.valueOf(this.tbProdutoAlt.getValueAt(this.tbProdutoAlt.getSelectedRow(), 6));
        }
    }//GEN-LAST:event_tbProdutoAltMouseClicked

    private void campoNomeAddKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_campoNomeAddKeyReleased
        if(this.campoNomeAdd.getText().isEmpty()){
            this.btAddProduto.setEnabled(false);
            this.campoPrecoAdd.setEnabled(false);
            this.campoQuantidadeAdd.setEnabled(false);
        }
        else if(!this.campoPrecoAdd.getText().isEmpty()&&!this.campoQuantidadeAdd.getText().isEmpty()){
            this.campoPrecoAdd.setEnabled(true);
            this.btAddProduto.setEnabled(true);
            this.campoQuantidadeAdd.setEnabled(true);
        }
        else if(!this.campoPrecoAdd.getText().isEmpty()){
            this.campoPrecoAdd.setEnabled(true);
        }
        else{
            this.btLimparAdd.setEnabled(true);
            this.campoPrecoAdd.setEnabled(true);
        }
    }//GEN-LAST:event_campoNomeAddKeyReleased

    private void campoPrecoAddKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_campoPrecoAddKeyReleased
        if(this.campoPrecoAdd.getText().isEmpty()){
            this.btAddProduto.setEnabled(false);
            this.campoQuantidadeAdd.setEnabled(false);
        }
        else if(!this.campoQuantidadeAdd.getText().isEmpty()){
            this.btAddProduto.setEnabled(true);
            this.campoQuantidadeAdd.setEnabled(true);
        }
        else{
            this.campoQuantidadeAdd.setEnabled(true);
        }
    }//GEN-LAST:event_campoPrecoAddKeyReleased

    private void campoQuantidadeAddKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_campoQuantidadeAddKeyReleased
        if(this.campoQuantidadeAdd.getText().isEmpty()){
            this.btAddProduto.setEnabled(false);
        }
        else{
            this.btAddProduto.setEnabled(true);
        }
    }//GEN-LAST:event_campoQuantidadeAddKeyReleased

    private void tbProdutoRmvMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tbProdutoRmvMouseClicked
        if(this.tbProdutoRmv.getSelectedRowCount()>0){
            this.btRmvProduto.setEnabled(true);
        }
        else{
            this.btRmvProduto.setEnabled(false);
        }
    }//GEN-LAST:event_tbProdutoRmvMouseClicked

    private void radioPesoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_radioPesoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_radioPesoActionPerformed

    private void campoPrecoAddKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_campoPrecoAddKeyTyped
        char c = evt.getKeyChar();
        if((c == KeyEvent.VK_PERIOD)&&this.campoPrecoAdd.getText().contains(String.valueOf("."))||(c == KeyEvent.VK_PERIOD)&&this.campoPrecoAdd.getText().length()<=0)
            evt.consume();
        else if (!((c >= '0') && (c <= '9') || (c == KeyEvent.VK_PERIOD)  || (c == KeyEvent.VK_BACK_SPACE) || (c == KeyEvent.VK_DELETE)))
            evt.consume();
        
    }//GEN-LAST:event_campoPrecoAddKeyTyped

    private void campoNomeCodRmvKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_campoNomeCodRmvKeyTyped
        char c = evt.getKeyChar();
        if(this.lbFormaPesquisaRmv.getText().equals("Nome do produto")){
            if(!(Character.isAlphabetic(c) || c == evt.VK_SPACE ||  c==evt.VK_DELETE ))
                evt.consume();
        }
        else if(this.lbFormaPesquisaRmv.getText().equals("CÃ³digo do produto")){
            if (!((c >= '0') && (c <= '9') || (c == KeyEvent.VK_BACK_SPACE) || (c == KeyEvent.VK_DELETE))) {
                evt.consume();
            }
        }
    }//GEN-LAST:event_campoNomeCodRmvKeyTyped

    private void campoNomeCodAltKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_campoNomeCodAltKeyTyped
        char c = evt.getKeyChar();
        if(this.lbFormaPesquisaAlt.getText().equals("Nome do produto")){
            if(!(Character.isAlphabetic(c) || c == evt.VK_SPACE ||  c==evt.VK_DELETE ))
                evt.consume();
        }
        else if(this.lbFormaPesquisaAlt.getText().equals("CÃ³digo do produto")){
            if (!((c >= '0') && (c <= '9') || (c == KeyEvent.VK_BACK_SPACE) || (c == KeyEvent.VK_DELETE))) {
                evt.consume();
            }
        }
    }//GEN-LAST:event_campoNomeCodAltKeyTyped

    private void campoNomeCodKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_campoNomeCodKeyTyped
        char c = evt.getKeyChar();
        if(this.lbFormaPesquisa.getText().equals("Nome do produto")){
            if(!(Character.isAlphabetic(c) || c == evt.VK_SPACE ||  c==evt.VK_DELETE ))
                evt.consume();
        }
        else if(this.lbFormaPesquisa.getText().equals("CÃ³digo do produto")){
            if (!((c >= '0') && (c <= '9') || (c == KeyEvent.VK_BACK_SPACE) || (c == KeyEvent.VK_DELETE))) {
                evt.consume();
            }
        }
    }//GEN-LAST:event_campoNomeCodKeyTyped

    private void campoCodFornecedorStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_campoCodFornecedorStateChanged
        rst=this.fornecedorController.buscarFornecedor("null", (Integer)this.campoCodFornecedor.getValue());
        try{
            rst.last();
            if(rst.getRow()<1){
                this.campoCodFornecedor.setValue(0);
            }
        }
        catch(SQLException e){}
        
    }//GEN-LAST:event_campoCodFornecedorStateChanged

    private void campoQuantidadeAddKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_campoQuantidadeAddKeyTyped
        char c = evt.getKeyChar();
        if((c == KeyEvent.VK_PERIOD)&&this.campoQuantidadeAdd.getText().contains(String.valueOf("."))||(c == KeyEvent.VK_PERIOD)&&this.campoQuantidadeAdd.getText().length()<=0)   
            evt.consume();
        else if (!((c >= '0') && (c <= '9') || (c == KeyEvent.VK_PERIOD)  || (c == KeyEvent.VK_BACK_SPACE) || (c == KeyEvent.VK_DELETE)))
            evt.consume();
    }//GEN-LAST:event_campoQuantidadeAddKeyTyped

    static public BufferedImage linearResizeBi(BufferedImage origin, int width, int height) {
        BufferedImage resizedImage = new BufferedImage(width, height ,BufferedImage.TYPE_INT_RGB);
        Graphics2D g = resizedImage.createGraphics();
        float xScale = (float)width / origin.getWidth();
        float yScale = (float)height / origin.getHeight();
        AffineTransform at = AffineTransform.getScaleInstance(xScale,yScale);
        g.drawRenderedImage(origin,at);
        g.dispose();
        return resizedImage;
    }
    
    private void tbProdutoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tbProdutoMouseClicked
        if(this.tbProduto.getSelectedRowCount()>=1){
            rst=this.produtoController.buscarProduto("null", (Integer)this.tbProduto.getValueAt(this.tbProduto.getSelectedRow(),0));
            
            try{
                System.out.println(rst.getString("nome"));
                BufferedImage im = ImageIO.read(rst.getBinaryStream("imagem"));
                this.lbImgPsq.setIcon(new ImageIcon(im));
            }
            catch(SQLException e){
                System.out.println(e);
            } catch (IOException ex) {
                Logger.getLogger(InterfaceProduto.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_tbProdutoMouseClicked

    private void limparCamposAdd(){
        this.campoNomeAdd.setText("");
        this.campoQuantidadeAdd.setText("");
        this.campoPrecoAdd.setText("");
        this.campoDescricaoAdd.setText("");
        this.comboFormaAlt.setSelectedIndex(0);
        this.comboFormaPesquisa.setSelectedIndex(0);
        this.comboFormaRmv.setSelectedIndex(0);
    }
    
    private void limparCamposPsq(){
        this.campoNomeCod.setText("");
        this.comboFormaAlt.setSelectedIndex(0);
        this.comboFormaPesquisa.setSelectedIndex(0);
        this.comboFormaRmv.setSelectedIndex(0);
        DefaultTableModel dm = (DefaultTableModel) this.tbProduto.getModel();
        int rowCount = dm.getRowCount();
        for (int i = rowCount - 1; i >= 0; i--) {
            dm.removeRow(i);
        }
    }
    
    private void limparCamposRmv(){
        this.campoNomeCodRmv.setText("");
        this.comboFormaAlt.setSelectedIndex(0);
        this.comboFormaPesquisa.setSelectedIndex(0);
        this.comboFormaRmv.setSelectedIndex(0);
        DefaultTableModel dm = (DefaultTableModel) this.tbProdutoRmv.getModel();
        int rowCount = dm.getRowCount();
        for (int i = rowCount - 1; i >= 0; i--) {
            dm.removeRow(i);
        }
    }
    
    private void limparCamposAlt(){
        this.campoNomeCodAlt.setText("");
        this.comboFormaAlt.setSelectedIndex(0);
        this.comboFormaPesquisa.setSelectedIndex(0);
        this.comboFormaRmv.setSelectedIndex(0);
        DefaultTableModel dm = (DefaultTableModel) this.tbProdutoAlt.getModel();
        int rowCount = dm.getRowCount();
        for (int i = rowCount - 1; i >= 0; i--) {
            dm.removeRow(i);
        }
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(InterfaceProduto.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            new InterfaceProduto().setVisible(true);
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btAddProduto;
    private javax.swing.JButton btAddProdutoP;
    private javax.swing.JButton btAlterarProdutoP;
    private javax.swing.JButton btBuscarAlt;
    private javax.swing.JButton btBuscarProduto;
    private javax.swing.JButton btBuscarRmv;
    private javax.swing.JButton btConsultarProdutoP;
    private javax.swing.JButton btImgAdd;
    private javax.swing.JButton btLimparAdd;
    private javax.swing.JButton btNaoRmv;
    private javax.swing.JButton btRemoverProdutoP;
    private javax.swing.JButton btRmvProduto;
    private javax.swing.JButton btSimRmv;
    private javax.swing.JButton btVoltarP;
    private javax.swing.JSpinner campoCodFornecedor;
    private javax.swing.JTextArea campoDescricaoAdd;
    private javax.swing.JTextField campoNomeAdd;
    private javax.swing.JTextField campoNomeCod;
    private javax.swing.JTextField campoNomeCodAlt;
    private javax.swing.JTextField campoNomeCodRmv;
    private javax.swing.JTextField campoPrecoAdd;
    private javax.swing.JTextField campoQuantidadeAdd;
    private javax.swing.JComboBox<String> comboFormaAlt;
    private javax.swing.JComboBox<String> comboFormaPesquisa;
    private javax.swing.JComboBox<String> comboFormaRmv;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JLabel lbFormaPesquisa;
    private javax.swing.JLabel lbFormaPesquisaAlt;
    private javax.swing.JLabel lbFormaPesquisaRmv;
    private javax.swing.JLabel lbImagemAdd;
    private javax.swing.JLabel lbImgPsq;
    private javax.swing.JDialog msgConfirmaRmv;
    private javax.swing.JPanel painelAddProduto;
    private javax.swing.JPanel painelAltProduto;
    private javax.swing.JLayeredPane painelCamadaProduto;
    private javax.swing.JPanel painelProduto;
    private javax.swing.JPanel painelPsqProduto;
    private javax.swing.JPanel painelRmvProduto;
    private javax.swing.JPanel painelSair;
    private javax.swing.JRadioButton radioPeso;
    private javax.swing.JRadioButton radioUnd;
    private javax.swing.JTable tbProduto;
    private javax.swing.JTable tbProdutoAlt;
    private javax.swing.JTable tbProdutoRmv;
    // End of variables declaration//GEN-END:variables
}
