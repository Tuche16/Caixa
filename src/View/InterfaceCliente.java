/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package View;

import Controller.ClienteController;
import java.awt.HeadlessException;
import java.awt.Image;
import java.awt.Toolkit;
import java.awt.event.KeyEvent;
import java.net.URL;
import java.sql.ResultSet;
import java.sql.SQLException;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Pedro
 */
public class InterfaceCliente extends javax.swing.JFrame {
    URL url = this.getClass().getResource("/Imagens/Icone.png");  
    Image iconeTitulo = Toolkit.getDefaultToolkit().getImage(url);  
    private final ClienteController clienteController = new ClienteController();
    private ResultSet rst;
    int cont=0;
    private String nomeAntigo,cpfAntigo, enderecoAntigo, telAntigo, outrosAntigo;
    private int codigoAntigo;
    private float precoAntigo,quantidadeAntigo;
    /**
     * Creates new form InterfaceCliente
     */
    public InterfaceCliente() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        msgConfirmaRmv = new javax.swing.JDialog();
        painelSair = new javax.swing.JPanel();
        btSimRmv = new javax.swing.JButton();
        btNaoRmv = new javax.swing.JButton();
        painelCliente = new javax.swing.JPanel();
        btRemoverCliente = new javax.swing.JButton();
        btAlterarCliente = new javax.swing.JButton();
        btConsultarCliente = new javax.swing.JButton();
        btAddCliente = new javax.swing.JButton();
        btVoltar = new javax.swing.JButton();
        painelCamadaCliente = new javax.swing.JLayeredPane();
        painelAddCliente = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        campoNomeAdd = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        campoEnderecoAdd = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        btAdicionar = new javax.swing.JButton();
        btLimparAdd = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        campoDescricaoAdd = new javax.swing.JTextArea();
        campoNumAdd = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        campoComplementoAdd = new javax.swing.JTextField();
        jLabel14 = new javax.swing.JLabel();
        campoBairroAdd = new javax.swing.JTextField();
        jLabel15 = new javax.swing.JLabel();
        campoCidadeAdd = new javax.swing.JTextField();
        jLabel16 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        comboUf = new javax.swing.JComboBox<>();
        campoCpfAdd = new javax.swing.JFormattedTextField();
        campoTelAdd = new javax.swing.JFormattedTextField();
        painelRmvCliente = new javax.swing.JPanel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        comboFormaRmv = new javax.swing.JComboBox<>();
        lbFormaPesquisaRmv = new javax.swing.JLabel();
        campoNomeCodRmv = new javax.swing.JTextField();
        btBuscarRmv = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        tbClienteRmv = new javax.swing.JTable();
        btRmvCliente = new javax.swing.JButton();
        painelAltCliente = new javax.swing.JPanel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        comboFormaAlt = new javax.swing.JComboBox<>();
        lbFormaPesquisaAlt = new javax.swing.JLabel();
        campoNomeCodAlt = new javax.swing.JTextField();
        btBuscarAlt = new javax.swing.JButton();
        jScrollPane4 = new javax.swing.JScrollPane();
        tbClienteAlt = new javax.swing.JTable();
        painelPsqCliente = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        lbFormaPesquisa = new javax.swing.JLabel();
        campoNomeCod = new javax.swing.JTextField();
        btBuscarCliente = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tbCliente = new javax.swing.JTable();
        comboFormaPesquisa = new javax.swing.JComboBox<>();

        msgConfirmaRmv.setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        msgConfirmaRmv.setTitle("Deseja realmente remover o produto?");
        msgConfirmaRmv.setAlwaysOnTop(true);
        msgConfirmaRmv.setIconImage(iconeTitulo);
        msgConfirmaRmv.setLocation(new java.awt.Point(500, 250));
        msgConfirmaRmv.setMinimumSize(new java.awt.Dimension(265, 70));
        msgConfirmaRmv.setResizable(false);

        painelSair.setPreferredSize(new java.awt.Dimension(265, 70));

        btSimRmv.setText("Sim");
        btSimRmv.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btSimRmv.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btSimRmvActionPerformed(evt);
            }
        });

        btNaoRmv.setText("NÃ£o");
        btNaoRmv.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btNaoRmv.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btNaoRmvActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout painelSairLayout = new javax.swing.GroupLayout(painelSair);
        painelSair.setLayout(painelSairLayout);
        painelSairLayout.setHorizontalGroup(
            painelSairLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(painelSairLayout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addComponent(btSimRmv, javax.swing.GroupLayout.DEFAULT_SIZE, 87, Short.MAX_VALUE)
                .addGap(42, 42, 42)
                .addComponent(btNaoRmv, javax.swing.GroupLayout.DEFAULT_SIZE, 88, Short.MAX_VALUE)
                .addGap(24, 24, 24))
        );
        painelSairLayout.setVerticalGroup(
            painelSairLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, painelSairLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(painelSairLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btSimRmv)
                    .addComponent(btNaoRmv))
                .addGap(3, 3, 3))
        );

        javax.swing.GroupLayout msgConfirmaRmvLayout = new javax.swing.GroupLayout(msgConfirmaRmv.getContentPane());
        msgConfirmaRmv.getContentPane().setLayout(msgConfirmaRmvLayout);
        msgConfirmaRmvLayout.setHorizontalGroup(
            msgConfirmaRmvLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(painelSair, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        msgConfirmaRmvLayout.setVerticalGroup(
            msgConfirmaRmvLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(painelSair, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Gerenciamento de clientes");
        setLocation(new java.awt.Point(100, 100));
        setResizable(false);

        this.painelAddCliente.setVisible(true);
        this.painelRmvCliente.setVisible(false);
        this.painelAltCliente.setVisible(false);
        this.painelPsqCliente.setVisible(false);

        btRemoverCliente.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagens/Remover produto.png"))); // NOI18N
        btRemoverCliente.setText("Remover cliente");
        btRemoverCliente.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btRemoverCliente.setMaximumSize(new java.awt.Dimension(389, 265));
        btRemoverCliente.setMinimumSize(new java.awt.Dimension(389, 265));
        btRemoverCliente.setPreferredSize(new java.awt.Dimension(389, 265));
        btRemoverCliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btRemoverClienteActionPerformed(evt);
            }
        });

        btAlterarCliente.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagens/Editar produto.png"))); // NOI18N
        btAlterarCliente.setText("Alterar cliente");
        btAlterarCliente.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btAlterarCliente.setMaximumSize(new java.awt.Dimension(389, 265));
        btAlterarCliente.setMinimumSize(new java.awt.Dimension(389, 265));
        btAlterarCliente.setPreferredSize(new java.awt.Dimension(389, 265));
        btAlterarCliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btAlterarClienteActionPerformed(evt);
            }
        });

        btConsultarCliente.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagens/Consultar produto.png"))); // NOI18N
        btConsultarCliente.setText("Consultar cliente");
        btConsultarCliente.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btConsultarCliente.setMaximumSize(new java.awt.Dimension(389, 265));
        btConsultarCliente.setMinimumSize(new java.awt.Dimension(389, 265));
        btConsultarCliente.setPreferredSize(new java.awt.Dimension(389, 265));
        btConsultarCliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btConsultarClienteActionPerformed(evt);
            }
        });

        btAddCliente.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagens/Adicionar produto.png"))); // NOI18N
        btAddCliente.setText("Adicionar cliente");
        btAddCliente.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btAddCliente.setEnabled(false);
        btAddCliente.setMaximumSize(new java.awt.Dimension(389, 265));
        btAddCliente.setMinimumSize(new java.awt.Dimension(389, 265));
        btAddCliente.setPreferredSize(new java.awt.Dimension(389, 265));
        btAddCliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btAddClienteActionPerformed(evt);
            }
        });

        btVoltar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagens/Voltar.png"))); // NOI18N
        btVoltar.setText("Voltar");
        btVoltar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btVoltar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btVoltarActionPerformed(evt);
            }
        });

        painelCamadaCliente.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED, java.awt.Color.lightGray, java.awt.Color.white, java.awt.Color.darkGray, java.awt.Color.gray));

        jLabel1.setText("Nome completo*:");

        campoNomeAdd.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                campoNomeAddKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                campoNomeAddKeyTyped(evt);
            }
        });

        jLabel2.setText("CPF*:");

        campoEnderecoAdd.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                campoEnderecoAddKeyTyped(evt);
            }
        });

        jLabel3.setText("EndereÃ§o:");

        jLabel5.setText("ObservaÃ§Ãµes");

        btAdicionar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagens/Finalizar adicionado.png"))); // NOI18N
        btAdicionar.setText("Adicionar");
        btAdicionar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btAdicionar.setEnabled(false);
        btAdicionar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btAdicionarActionPerformed(evt);
            }
        });

        btLimparAdd.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagens/Limpar campos.png"))); // NOI18N
        btLimparAdd.setText("Limpar campos");
        btLimparAdd.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btLimparAdd.setEnabled(false);
        btLimparAdd.setMaximumSize(new java.awt.Dimension(139, 31));
        btLimparAdd.setMinimumSize(new java.awt.Dimension(139, 31));
        btLimparAdd.setPreferredSize(new java.awt.Dimension(139, 31));
        btLimparAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btLimparAddActionPerformed(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(0, 102, 102));
        jLabel4.setText("ADICIONAR CLIENTE");

        campoDescricaoAdd.setColumns(20);
        campoDescricaoAdd.setRows(5);
        jScrollPane2.setViewportView(campoDescricaoAdd);

        campoNumAdd.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                campoNumAddKeyTyped(evt);
            }
        });

        jLabel12.setText("NÃºmero:");

        jLabel13.setText("Complemento:");

        jLabel14.setText("Cidade:");

        campoBairroAdd.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                campoBairroAddKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                campoBairroAddKeyTyped(evt);
            }
        });

        jLabel15.setText("Bairro:");

        campoCidadeAdd.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                campoCidadeAddKeyTyped(evt);
            }
        });

        jLabel16.setText("UF:");

        jLabel17.setText("Tel/Cel*:");

        comboUf.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "AC", "AL", "AP", "AM", "BA", "CE", "DF", "ES", "GO", "MA", "MT", "MS", "MG", "PA", "PB", "PR", "PE", "PI", "RJ", "RN", "RS", "RO", "RR", "SC", "SP", "SE", "TO" }));

        try {
            campoCpfAdd.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("###.###.###-##")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        campoCpfAdd.setEnabled(false);
        campoCpfAdd.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                campoCpfAddKeyReleased(evt);
            }
        });

        try {
            campoTelAdd.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("(##)#####-####")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        campoTelAdd.setEnabled(false);
        campoTelAdd.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                campoTelAddKeyReleased(evt);
            }
        });

        javax.swing.GroupLayout painelAddClienteLayout = new javax.swing.GroupLayout(painelAddCliente);
        painelAddCliente.setLayout(painelAddClienteLayout);
        painelAddClienteLayout.setHorizontalGroup(
            painelAddClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(painelAddClienteLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(painelAddClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(painelAddClienteLayout.createSequentialGroup()
                        .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, 234, Short.MAX_VALUE)
                        .addGap(880, 880, 880))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, painelAddClienteLayout.createSequentialGroup()
                        .addGap(12, 12, 12)
                        .addGroup(painelAddClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(painelAddClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addGroup(painelAddClienteLayout.createSequentialGroup()
                                    .addComponent(btLimparAdd, javax.swing.GroupLayout.PREFERRED_SIZE, 165, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(30, 30, 30)
                                    .addComponent(btAdicionar))
                                .addGroup(painelAddClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(painelAddClienteLayout.createSequentialGroup()
                                        .addGroup(painelAddClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, painelAddClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                .addComponent(jLabel3)
                                                .addComponent(jLabel15, javax.swing.GroupLayout.Alignment.TRAILING)
                                                .addComponent(jLabel17, javax.swing.GroupLayout.Alignment.TRAILING)))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addGroup(painelAddClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(campoNomeAdd, javax.swing.GroupLayout.PREFERRED_SIZE, 408, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addGroup(painelAddClienteLayout.createSequentialGroup()
                                                .addGroup(painelAddClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                    .addGroup(painelAddClienteLayout.createSequentialGroup()
                                                        .addComponent(campoEnderecoAdd, javax.swing.GroupLayout.PREFERRED_SIZE, 163, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                        .addComponent(jLabel12)
                                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                        .addComponent(campoNumAdd, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                        .addComponent(jLabel13))
                                                    .addGroup(painelAddClienteLayout.createSequentialGroup()
                                                        .addComponent(campoBairroAdd)
                                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                        .addComponent(jLabel14)
                                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                        .addComponent(campoCidadeAdd, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addGroup(painelAddClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addComponent(campoComplementoAdd)
                                                    .addGroup(painelAddClienteLayout.createSequentialGroup()
                                                        .addComponent(jLabel16)
                                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                        .addComponent(comboUf, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                                            .addComponent(campoCpfAdd, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(campoTelAdd, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 1055, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 196, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
        painelAddClienteLayout.setVerticalGroup(
            painelAddClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(painelAddClienteLayout.createSequentialGroup()
                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(30, 30, 30)
                .addGroup(painelAddClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(campoNomeAdd, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(painelAddClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(campoCpfAdd, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(painelAddClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(campoEnderecoAdd, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(campoNumAdd, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(campoComplementoAdd, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(painelAddClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(campoBairroAdd, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel15, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(campoCidadeAdd, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel16)
                    .addComponent(comboUf, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel14, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(painelAddClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel17)
                    .addComponent(campoTelAdd, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 15, Short.MAX_VALUE)
                .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 154, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(painelAddClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btLimparAdd, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btAdicionar, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        jLabel8.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(0, 102, 102));
        jLabel8.setText("REMOVER CLIENTE");

        jLabel9.setText("Forma de pesquisa");

        comboFormaRmv.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Todos clientes", "Nome do cliente", "CÃ³digo do cliente" }));
        comboFormaRmv.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        comboFormaRmv.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                comboFormaRmvItemStateChanged(evt);
            }
        });

        lbFormaPesquisaRmv.setText("Todos clientes");

        campoNomeCodRmv.setEnabled(false);
        campoNomeCodRmv.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                campoNomeCodRmvKeyTyped(evt);
            }
        });

        btBuscarRmv.setText("Buscar");
        btBuscarRmv.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btBuscarRmv.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btBuscarRmvActionPerformed(evt);
            }
        });

        tbClienteRmv.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "CÃ³digo", "Nome", "CPF", "EndereÃ§o", "Telefone/Celular", "Data de cadastro", "ObservaÃ§Ãµes"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tbClienteRmv.getTableHeader().setReorderingAllowed(false);
        tbClienteRmv.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tbClienteRmvMouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(tbClienteRmv);

        btRmvCliente.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagens/Finalizar removido.png"))); // NOI18N
        btRmvCliente.setText("Remover cliente");
        btRmvCliente.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btRmvCliente.setEnabled(false);
        btRmvCliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btRmvClienteActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout painelRmvClienteLayout = new javax.swing.GroupLayout(painelRmvCliente);
        painelRmvCliente.setLayout(painelRmvClienteLayout);
        painelRmvClienteLayout.setHorizontalGroup(
            painelRmvClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(painelRmvClienteLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 232, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, painelRmvClienteLayout.createSequentialGroup()
                .addGap(6, 6, 6)
                .addGroup(painelRmvClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, painelRmvClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 1079, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(lbFormaPesquisaRmv)
                        .addGroup(painelRmvClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(painelRmvClienteLayout.createSequentialGroup()
                                .addComponent(jLabel9)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(comboFormaRmv, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, painelRmvClienteLayout.createSequentialGroup()
                                .addComponent(campoNomeCodRmv, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btBuscarRmv, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addComponent(btRmvCliente, javax.swing.GroupLayout.Alignment.TRAILING))
                .addGap(26, 26, 26))
        );
        painelRmvClienteLayout.setVerticalGroup(
            painelRmvClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(painelRmvClienteLayout.createSequentialGroup()
                .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(30, 30, 30)
                .addGroup(painelRmvClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(comboFormaRmv, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(lbFormaPesquisaRmv)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(painelRmvClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(campoNomeCodRmv, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btBuscarRmv))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 243, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btRmvCliente)
                .addContainerGap())
        );

        jLabel10.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(0, 102, 102));
        jLabel10.setText("ALTERAR CLIENTE");

        jLabel11.setText("Forma de pesquisa");

        comboFormaAlt.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Todos clientes", "Nome do cliente", "CÃ³digo do cliente" }));
        comboFormaAlt.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        comboFormaAlt.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                comboFormaAltItemStateChanged(evt);
            }
        });

        lbFormaPesquisaAlt.setText("Todos clientes");

        campoNomeCodAlt.setEnabled(false);
        campoNomeCodAlt.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                campoNomeCodAltKeyTyped(evt);
            }
        });

        btBuscarAlt.setText("Buscar");
        btBuscarAlt.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btBuscarAlt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btBuscarAltActionPerformed(evt);
            }
        });

        tbClienteAlt.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "CÃ³digo", "Nome", "CPF", "EndereÃ§o", "Telefone/Celular", "Data de cadastro", "ObservaÃ§Ãµes"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, true, true, true, true, true, true
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tbClienteAlt.getTableHeader().setReorderingAllowed(false);
        tbClienteAlt.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tbClienteAltMouseClicked(evt);
            }
        });
        tbClienteAlt.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                tbClienteAltPropertyChange(evt);
            }
        });
        jScrollPane4.setViewportView(tbClienteAlt);

        javax.swing.GroupLayout painelAltClienteLayout = new javax.swing.GroupLayout(painelAltCliente);
        painelAltCliente.setLayout(painelAltClienteLayout);
        painelAltClienteLayout.setHorizontalGroup(
            painelAltClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(painelAltClienteLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 232, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, painelAltClienteLayout.createSequentialGroup()
                .addGap(6, 6, 6)
                .addGroup(painelAltClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 1079, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lbFormaPesquisaAlt)
                    .addGroup(painelAltClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addGroup(painelAltClienteLayout.createSequentialGroup()
                            .addComponent(jLabel11)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(comboFormaAlt, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, painelAltClienteLayout.createSequentialGroup()
                            .addComponent(campoNomeCodAlt, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(btBuscarAlt, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(26, 26, 26))
        );
        painelAltClienteLayout.setVerticalGroup(
            painelAltClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(painelAltClienteLayout.createSequentialGroup()
                .addGap(0, 0, 0)
                .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(30, 30, 30)
                .addGroup(painelAltClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel11)
                    .addComponent(comboFormaAlt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(lbFormaPesquisaAlt)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(painelAltClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(campoNomeCodAlt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btBuscarAlt))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 280, Short.MAX_VALUE)
                .addContainerGap())
        );

        painelPsqCliente.setPreferredSize(new java.awt.Dimension(1113, 395));

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(0, 102, 102));
        jLabel6.setText("CONSULTAR CLIENTE");

        jLabel7.setText("Forma de pesquisa");

        lbFormaPesquisa.setText("Todos clientes");

        campoNomeCod.setEnabled(false);
        campoNomeCod.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                campoNomeCodKeyTyped(evt);
            }
        });

        btBuscarCliente.setText("Buscar");
        btBuscarCliente.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btBuscarCliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btBuscarClienteActionPerformed(evt);
            }
        });

        tbCliente.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "CÃ³digo", "Nome", "CPF", "EndereÃ§o", "Telefone/Celular", "Data de cadastro", "ObservaÃ§Ãµes"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tbCliente.getTableHeader().setReorderingAllowed(false);
        jScrollPane1.setViewportView(tbCliente);

        comboFormaPesquisa.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Todos clientes", "Nome do cliente", "CÃ³digo do cliente" }));
        comboFormaPesquisa.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        comboFormaPesquisa.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                comboFormaPesquisaItemStateChanged(evt);
            }
        });

        javax.swing.GroupLayout painelPsqClienteLayout = new javax.swing.GroupLayout(painelPsqCliente);
        painelPsqCliente.setLayout(painelPsqClienteLayout);
        painelPsqClienteLayout.setHorizontalGroup(
            painelPsqClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(painelPsqClienteLayout.createSequentialGroup()
                .addGroup(painelPsqClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(painelPsqClienteLayout.createSequentialGroup()
                        .addGap(15, 15, 15)
                        .addGroup(painelPsqClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lbFormaPesquisa)
                            .addGroup(painelPsqClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addGroup(painelPsqClienteLayout.createSequentialGroup()
                                    .addComponent(jLabel7)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(comboFormaPesquisa, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, painelPsqClienteLayout.createSequentialGroup()
                                    .addComponent(campoNomeCod, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(btBuscarCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                    .addGroup(painelPsqClienteLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 232, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, painelPsqClienteLayout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addComponent(jScrollPane1)
                .addGap(26, 26, 26))
        );
        painelPsqClienteLayout.setVerticalGroup(
            painelPsqClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(painelPsqClienteLayout.createSequentialGroup()
                .addGap(0, 0, 0)
                .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(30, 30, 30)
                .addGroup(painelPsqClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(comboFormaPesquisa, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(lbFormaPesquisa)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(painelPsqClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(campoNomeCod, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btBuscarCliente))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 242, Short.MAX_VALUE)
                .addContainerGap())
        );

        painelCamadaCliente.setLayer(painelAddCliente, javax.swing.JLayeredPane.DEFAULT_LAYER);
        painelCamadaCliente.setLayer(painelRmvCliente, javax.swing.JLayeredPane.DEFAULT_LAYER);
        painelCamadaCliente.setLayer(painelAltCliente, javax.swing.JLayeredPane.DEFAULT_LAYER);
        painelCamadaCliente.setLayer(painelPsqCliente, javax.swing.JLayeredPane.DEFAULT_LAYER);

        javax.swing.GroupLayout painelCamadaClienteLayout = new javax.swing.GroupLayout(painelCamadaCliente);
        painelCamadaCliente.setLayout(painelCamadaClienteLayout);
        painelCamadaClienteLayout.setHorizontalGroup(
            painelCamadaClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(painelAddCliente, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(painelCamadaClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(painelRmvCliente, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(painelCamadaClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(painelAltCliente, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(painelCamadaClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(painelPsqCliente, javax.swing.GroupLayout.DEFAULT_SIZE, 1124, Short.MAX_VALUE))
        );
        painelCamadaClienteLayout.setVerticalGroup(
            painelCamadaClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(painelAddCliente, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(painelCamadaClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(painelRmvCliente, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(painelCamadaClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(painelAltCliente, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(painelCamadaClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(painelPsqCliente, javax.swing.GroupLayout.DEFAULT_SIZE, 433, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout painelClienteLayout = new javax.swing.GroupLayout(painelCliente);
        painelCliente.setLayout(painelClienteLayout);
        painelClienteLayout.setHorizontalGroup(
            painelClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(painelClienteLayout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addGroup(painelClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(painelClienteLayout.createSequentialGroup()
                        .addComponent(btAddCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 1, Short.MAX_VALUE)
                        .addGap(102, 102, 102)
                        .addComponent(btRemoverCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 1, Short.MAX_VALUE)
                        .addGap(102, 102, 102)
                        .addComponent(btAlterarCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 1, Short.MAX_VALUE)
                        .addGap(102, 102, 102)
                        .addComponent(btConsultarCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 1, Short.MAX_VALUE))
                    .addComponent(painelCamadaCliente)
                    .addGroup(painelClienteLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(btVoltar)))
                .addGap(19, 19, 19))
        );
        painelClienteLayout.setVerticalGroup(
            painelClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(painelClienteLayout.createSequentialGroup()
                .addGap(9, 9, 9)
                .addGroup(painelClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(painelClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(btAlterarCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 52, Short.MAX_VALUE)
                        .addComponent(btConsultarCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 52, Short.MAX_VALUE))
                    .addGroup(painelClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(btAddCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 52, Short.MAX_VALUE)
                        .addComponent(btRemoverCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 52, Short.MAX_VALUE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(painelCamadaCliente)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btVoltar, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(5, 5, 5))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(painelCliente, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(painelCliente, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btRemoverClienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btRemoverClienteActionPerformed
        limparCamposPsq();
        limparCamposAdd();
        limparCamposAlt();
        this.listarClientes(1);
        this.btRmvCliente.setEnabled(false);
        this.btAddCliente.setEnabled(true);
        this.btRemoverCliente.setEnabled(false);
        this.btAlterarCliente.setEnabled(true);
        this.btConsultarCliente.setEnabled(true);
        this.painelAddCliente.setVisible(false);
        this.painelRmvCliente.setVisible(true);
        this.painelAltCliente.setVisible(false);
        this.painelPsqCliente.setVisible(false);
        DefaultTableCellRenderer centerRenderer = new DefaultTableCellRenderer();
        centerRenderer.setHorizontalAlignment( JLabel.CENTER );
        for(int x=0;x<this.tbClienteRmv.getColumnCount();x++){
            this.tbClienteRmv.getColumnModel().getColumn(x).setCellRenderer( centerRenderer );
        }
    }//GEN-LAST:event_btRemoverClienteActionPerformed

    private void btAlterarClienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btAlterarClienteActionPerformed
        limparCamposPsq();
        limparCamposAdd();
        limparCamposRmv();
        this.listarClientes(3);
        this.btAddCliente.setEnabled(true);
        this.btRemoverCliente.setEnabled(true);
        this.btAlterarCliente.setEnabled(false);
        this.btConsultarCliente.setEnabled(true);
        this.painelAddCliente.setVisible(false);
        this.painelRmvCliente.setVisible(false);
        this.painelAltCliente.setVisible(true);
        this.painelPsqCliente.setVisible(false);
        DefaultTableCellRenderer centerRenderer = new DefaultTableCellRenderer();
        centerRenderer.setHorizontalAlignment( JLabel.CENTER );
        for(int x=0;x<this.tbClienteAlt.getColumnCount();x++){
            this.tbClienteAlt.getColumnModel().getColumn(x).setCellRenderer( centerRenderer );
        }
    }//GEN-LAST:event_btAlterarClienteActionPerformed

    private void btConsultarClienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btConsultarClienteActionPerformed
        this.listarClientes(2);
        limparCamposAdd();
        limparCamposRmv();
        limparCamposAlt();
        this.btAddCliente.setEnabled(true);
        this.btRemoverCliente.setEnabled(true);
        this.btAlterarCliente.setEnabled(true);
        this.btConsultarCliente.setEnabled(false);
        this.painelAddCliente.setVisible(false);
        this.painelRmvCliente.setVisible(false);
        this.painelAltCliente.setVisible(false);
        this.painelPsqCliente.setVisible(true);
        DefaultTableCellRenderer centerRenderer = new DefaultTableCellRenderer();
        centerRenderer.setHorizontalAlignment( JLabel.CENTER );
        for(int x=0;x<this.tbCliente.getColumnCount();x++){
            this.tbCliente.getColumnModel().getColumn(x).setCellRenderer( centerRenderer );
        }
    }//GEN-LAST:event_btConsultarClienteActionPerformed

    private void btAddClienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btAddClienteActionPerformed
        limparCamposPsq();
        limparCamposRmv();
        limparCamposAlt();
        this.campoCpfAdd.setEnabled(false);
        this.btAdicionar.setEnabled(false);
        this.btLimparAdd.setEnabled(false);
        this.btAddCliente.setEnabled(false);
        this.btRemoverCliente.setEnabled(true);
        this.btAlterarCliente.setEnabled(true);
        this.btConsultarCliente.setEnabled(true);
        this.painelAddCliente.setVisible(true);
        this.painelRmvCliente.setVisible(false);
        this.painelAltCliente.setVisible(false);
        this.painelPsqCliente.setVisible(false);
    }//GEN-LAST:event_btAddClienteActionPerformed

    private void btVoltarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btVoltarActionPerformed
        limparCamposPsq();
        limparCamposAdd();
        this.dispose();
    }//GEN-LAST:event_btVoltarActionPerformed

    private void campoNomeAddKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_campoNomeAddKeyReleased
        if(this.campoNomeAdd.getText().isEmpty()){
            this.btAdicionar.setEnabled(false);
            this.campoCpfAdd.setEnabled(false);
            this.campoTelAdd.setEnabled(false);
        }
        else if(!this.campoCpfAdd.getText().contains(" ")&&!this.campoTelAdd.getText().contains(" ")){
            this.campoCpfAdd.setEnabled(true);
            this.campoTelAdd.setEnabled(true);
            this.btAdicionar.setEnabled(true);
        }
        else if(!this.campoCpfAdd.getText().contains(" ")){
            this.campoCpfAdd.setEnabled(true);
        }
        else{
            this.btLimparAdd.setEnabled(true);
            this.campoCpfAdd.setEnabled(true);
        }
    }//GEN-LAST:event_campoNomeAddKeyReleased

    private void btAdicionarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btAdicionarActionPerformed
        try{
            if(!this.clienteController.cpfExistente(this.campoCpfAdd.getText())){
                String endereco = this.campoEnderecoAdd.getText() + this.campoNumAdd.getText() + this.campoComplementoAdd.getText()+
                        this.campoBairroAdd.getText()+this.campoCidadeAdd.getText()+this.comboUf.getSelectedItem();
                this.clienteController.adicionarCliente(this.campoNomeAdd.getText(), this.campoCpfAdd.getText(), endereco , 
                        this.campoTelAdd.getText(), this.campoDescricaoAdd.getText());
                JOptionPane.showMessageDialog(null,"Cliente adicionado com sucesso!","ATENÃÃO",JOptionPane.INFORMATION_MESSAGE);
            }
            else{
                JOptionPane.showMessageDialog(null,"CPF jÃ¡ cadastrado no sistema!","ATENÃÃO",JOptionPane.INFORMATION_MESSAGE);
            }
        }
        catch(HeadlessException e){
            JOptionPane.showMessageDialog(null,"Preencha os campos corretamente!","ATENÃÃO",JOptionPane.INFORMATION_MESSAGE);
        }
        limparCamposAdd();
    }//GEN-LAST:event_btAdicionarActionPerformed

    private void btLimparAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btLimparAddActionPerformed
        limparCamposAdd();
        this.campoCpfAdd.setEnabled(false);
        this.campoTelAdd.setEnabled(false);
        this.btLimparAdd.setEnabled(false);
        this.btAdicionar.setEnabled(false);
    }//GEN-LAST:event_btLimparAddActionPerformed

    private void comboFormaRmvItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_comboFormaRmvItemStateChanged
        this.campoNomeCodRmv.setText("");
        DefaultTableModel dm = (DefaultTableModel) this.tbClienteRmv.getModel();
        switch (this.comboFormaRmv.getSelectedIndex()) {
            case 0:
                this.campoNomeCodRmv.setEnabled(false);
                this.lbFormaPesquisaRmv.setText("Todos clientes");
                if(cont==0){
                    this.listarClientes(1);
                    cont++;
                }   this.btRmvCliente.setEnabled(false);
                break;
            case 1:
                {
                    int rowCount = dm.getRowCount();
                    for (int i = rowCount - 1; i >= 0; i--) {
                        dm.removeRow(i);
                    }       this.campoNomeCodRmv.setEnabled(true);
                    this.lbFormaPesquisaRmv.setText("Nome do cliente");
                    cont=0;
                    this.btRmvCliente.setEnabled(false);
                    break;
                }
            default:
                {
                    int rowCount = dm.getRowCount();
                    for (int i = rowCount - 1; i >= 0; i--) {
                        dm.removeRow(i);
                    }       this.campoNomeCodRmv.setEnabled(true);
                    this.lbFormaPesquisaRmv.setText("CÃ³digo do cliente");
                    cont=0;
                    this.btRmvCliente.setEnabled(false);
                    break;
                }
        }
        DefaultTableCellRenderer centerRenderer = new DefaultTableCellRenderer();
        centerRenderer.setHorizontalAlignment( JLabel.CENTER );
        for(int x=0;x<this.tbClienteRmv.getColumnCount();x++){
            this.tbClienteRmv.getColumnModel().getColumn(x).setCellRenderer( centerRenderer );
        }
    }//GEN-LAST:event_comboFormaRmvItemStateChanged

    private void btBuscarRmvActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btBuscarRmvActionPerformed
        DefaultTableModel dm = (DefaultTableModel) this.tbClienteRmv.getModel();
        if(this.comboFormaRmv.getSelectedIndex()==0&&this.tbClienteRmv.getRowCount()<0){
            this.listarClientes(1);
        }
        else if(this.comboFormaRmv.getSelectedIndex()==1&&!this.campoNomeCodRmv.getText().isEmpty()){
            int rowCount = dm.getRowCount();
            for (int i = rowCount - 1; i >= 0; i--) {
                dm.removeRow(i);
            }
            rst=this.clienteController.buscarCliente(this.campoNomeCodRmv.getText(), 0);
            DefaultTableModel model = (DefaultTableModel) this.tbClienteRmv.getModel();
            try{
                model.addRow(new Object[]{rst.getInt("idCliente"),rst.getString("nome"),rst.getString("cpf"),rst.getString("endereco"),rst.getString("tel"),rst.getString("dataCadastro"),rst.getString("outros")});
                while(rst.next()){
                    model.addRow(new Object[]{rst.getInt("idCliente"),rst.getString("nome"),rst.getString("cpf"),rst.getString("endereco"),rst.getString("tel"),rst.getString("dataCadastro"),rst.getString("outros")});
                }
            }
            catch(SQLException e){
                JOptionPane.showMessageDialog(null,"NÃ£o foi encontrado nenhum cliente com esse nome!","ATENÃÃO",JOptionPane.INFORMATION_MESSAGE);
            }
        }
        else if(this.comboFormaRmv.getSelectedIndex()==2&&!this.campoNomeCodRmv.getText().isEmpty()){
            int rowCount = dm.getRowCount();
            for (int i = rowCount - 1; i >= 0; i--) {
                dm.removeRow(i);
            }
            rst=this.clienteController.buscarCliente("null", Integer.parseInt(this.campoNomeCodRmv.getText()));
            DefaultTableModel model = (DefaultTableModel) this.tbClienteRmv.getModel();
            try{
                model.addRow(new Object[]{rst.getInt("idCliente"),rst.getString("nome"),rst.getString("cpf"),rst.getString("endereco"),rst.getString("tel"),rst.getString("dataCadastro"),rst.getString("outros")});
            }
            catch(SQLException e){
                JOptionPane.showMessageDialog(null,"NÃ£o foi encontrado nenhum cliente com esse cÃ³digo!","ATENÃÃO",JOptionPane.INFORMATION_MESSAGE);
            }
        }
        DefaultTableCellRenderer centerRenderer = new DefaultTableCellRenderer();
        centerRenderer.setHorizontalAlignment( JLabel.CENTER );
        for(int x=0;x<this.tbClienteRmv.getColumnCount();x++){
            this.tbClienteRmv.getColumnModel().getColumn(x).setCellRenderer( centerRenderer );
        }
    }//GEN-LAST:event_btBuscarRmvActionPerformed

    private void tbClienteRmvMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tbClienteRmvMouseClicked
        if(this.tbClienteRmv.getSelectedRowCount()>0){
            this.btRmvCliente.setEnabled(true);
        }
        else{
            this.btRmvCliente.setEnabled(false);
        }
    }//GEN-LAST:event_tbClienteRmvMouseClicked

    private void btRmvClienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btRmvClienteActionPerformed
        if(tbClienteRmv.getSelectedRowCount()>=1){
            this.msgConfirmaRmv.setVisible(true);
        }
        else{
            JOptionPane.showMessageDialog(null,"Selecione um cliente!","ATENÃÃO",JOptionPane.INFORMATION_MESSAGE);
        }
    }//GEN-LAST:event_btRmvClienteActionPerformed

    private void comboFormaAltItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_comboFormaAltItemStateChanged
        this.campoNomeCodAlt.setText("");
        DefaultTableModel dm = (DefaultTableModel) this.tbClienteAlt.getModel();
        switch (this.comboFormaAlt.getSelectedIndex()) {
            case 0:
                this.campoNomeCodAlt.setEnabled(false);
                this.lbFormaPesquisaAlt.setText("Todos clientes");
                if(cont==0){
                    this.listarClientes(3);
                    cont++;
                }   this.btRmvCliente.setEnabled(false);
                break;
            case 1:
                {
                    int rowCount = dm.getRowCount();
                    for (int i = rowCount - 1; i >= 0; i--) {
                        dm.removeRow(i);
                    }       this.campoNomeCodAlt.setEnabled(true);
                    this.lbFormaPesquisaAlt.setText("Nome do cliente");
                    cont=0;
                    this.btRmvCliente.setEnabled(false);
                    break;
                }
            default:
                {
                    int rowCount = dm.getRowCount();
                    for (int i = rowCount - 1; i >= 0; i--) {
                        dm.removeRow(i);
                    }       this.campoNomeCodAlt.setEnabled(true);
                    this.lbFormaPesquisaAlt.setText("CÃ³digo do cliente");
                    cont=0;
                    this.btRmvCliente.setEnabled(false);
                    break;
                }
        }
        DefaultTableCellRenderer centerRenderer = new DefaultTableCellRenderer();
        centerRenderer.setHorizontalAlignment( JLabel.CENTER );
        for(int x=0;x<this.tbClienteAlt.getColumnCount();x++){
            this.tbClienteAlt.getColumnModel().getColumn(x).setCellRenderer( centerRenderer );
        }
    }//GEN-LAST:event_comboFormaAltItemStateChanged

    private void btBuscarAltActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btBuscarAltActionPerformed
        DefaultTableModel dm = (DefaultTableModel) this.tbClienteAlt.getModel();
        if(this.comboFormaAlt.getSelectedIndex()==0&&this.tbClienteAlt.getRowCount()<0){
            this.listarClientes(1);
        }
        else if(this.comboFormaAlt.getSelectedIndex()==1&&!this.campoNomeCodAlt.getText().isEmpty()){
            int rowCount = dm.getRowCount();
            for (int i = rowCount - 1; i >= 0; i--) {
                dm.removeRow(i);
            }
            rst=this.clienteController.buscarCliente(this.campoNomeCodAlt.getText(), 0);
            DefaultTableModel model = (DefaultTableModel) this.tbClienteAlt.getModel();
            try{
                model.addRow(new Object[]{rst.getInt("idCliente"),rst.getString("nome"),rst.getString("cpf"),rst.getString("endereco"),rst.getString("tel"),rst.getString("dataCadastro"),rst.getString("outros")});
                while(rst.next()){
                    model.addRow(new Object[]{rst.getInt("idCliente"),rst.getString("nome"),rst.getString("cpf"),rst.getString("endereco"),rst.getString("tel"),rst.getString("dataCadastro"),rst.getString("outros")});
                }
            }
            catch(SQLException e){
                JOptionPane.showMessageDialog(null,"NÃ£o foi encontrado nenhum cliente com esse nome!","ATENÃÃO",JOptionPane.INFORMATION_MESSAGE);
            }
        }
        else if(this.comboFormaAlt.getSelectedIndex()==2&&!this.campoNomeCodAlt.getText().isEmpty()){
            int rowCount = dm.getRowCount();
            for (int i = rowCount - 1; i >= 0; i--) {
                dm.removeRow(i);
            }
            rst=this.clienteController.buscarCliente("null", Integer.parseInt(this.campoNomeCodAlt.getText()));
            DefaultTableModel model = (DefaultTableModel) this.tbClienteAlt.getModel();
            try{
                model.addRow(new Object[]{rst.getInt("idCliente"),rst.getString("nome"),rst.getString("cpf"),rst.getString("endereco"),rst.getString("tel"),rst.getString("dataCadastro"),rst.getString("outros")});
            }
            catch(SQLException e){
                JOptionPane.showMessageDialog(null,"NÃ£o foi encontrado nenhum cliente com esse cÃ³digo!","ATENÃÃO",JOptionPane.INFORMATION_MESSAGE);
            }
        }
        DefaultTableCellRenderer centerRenderer = new DefaultTableCellRenderer();
        centerRenderer.setHorizontalAlignment( JLabel.CENTER );
        for(int x=0;x<this.tbClienteAlt.getColumnCount();x++){
            this.tbClienteAlt.getColumnModel().getColumn(x).setCellRenderer( centerRenderer );
        }
    }//GEN-LAST:event_btBuscarAltActionPerformed

    private void tbClienteAltMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tbClienteAltMouseClicked
        if(this.tbClienteAlt.getSelectedRow()>=0){
            nomeAntigo = String.valueOf(this.tbClienteAlt.getValueAt(this.tbClienteAlt.getSelectedRow(), 1));
            cpfAntigo = String.valueOf(this.tbClienteAlt.getValueAt(this.tbClienteAlt.getSelectedRow(), 2));
            enderecoAntigo = String.valueOf(this.tbClienteAlt.getValueAt(this.tbClienteAlt.getSelectedRow(), 3));
            telAntigo = String.valueOf(this.tbClienteAlt.getValueAt(this.tbClienteAlt.getSelectedRow(), 4));
            outrosAntigo = String.valueOf(this.tbClienteAlt.getValueAt(this.tbClienteAlt.getSelectedRow(), 6));
        }
    }//GEN-LAST:event_tbClienteAltMouseClicked

    private void tbClienteAltPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_tbClienteAltPropertyChange
        if(this.tbClienteAlt.getSelectedRow()>=0){
            if(!String.valueOf(this.tbClienteAlt.getValueAt(this.tbClienteAlt.getSelectedRow(), 1)).equals(nomeAntigo)||
                !String.valueOf(this.tbClienteAlt.getValueAt(this.tbClienteAlt.getSelectedRow(), 1)).equals(cpfAntigo)||
                !String.valueOf(this.tbClienteAlt.getValueAt(this.tbClienteAlt.getSelectedRow(), 1)).equals(enderecoAntigo)||
                !String.valueOf(this.tbClienteAlt.getValueAt(this.tbClienteAlt.getSelectedRow(), 5)).equals(telAntigo)||
                !String.valueOf(this.tbClienteAlt.getValueAt(this.tbClienteAlt.getSelectedRow(), 6)).equals(outrosAntigo))
            {
                this.clienteController.alterarCliente((Integer) this.tbClienteAlt.getValueAt(this.tbClienteAlt.getSelectedRow(), 0),
                    String.valueOf(this.tbClienteAlt.getValueAt(this.tbClienteAlt.getSelectedRow(), 1)),
                    String.valueOf(this.tbClienteAlt.getValueAt(this.tbClienteAlt.getSelectedRow(), 2)),
                    String.valueOf(this.tbClienteAlt.getValueAt(this.tbClienteAlt.getSelectedRow(), 3)),
                    String.valueOf(this.tbClienteAlt.getValueAt(this.tbClienteAlt.getSelectedRow(), 4)),
                    String.valueOf(this.tbClienteAlt.getValueAt(this.tbClienteAlt.getSelectedRow(), 6))
                );
            }
        }
    }//GEN-LAST:event_tbClienteAltPropertyChange

    private void btBuscarClienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btBuscarClienteActionPerformed
        DefaultTableModel dm = (DefaultTableModel) this.tbCliente.getModel();
        if(this.comboFormaPesquisa.getSelectedIndex()==0&&this.tbCliente.getRowCount()<0){
            this.listarClientes(2);
        }
        else if(this.comboFormaPesquisa.getSelectedIndex()==1&&!this.campoNomeCod.getText().isEmpty()){
            int rowCount = dm.getRowCount();
            for (int i = rowCount - 1; i >= 0; i--) {
                dm.removeRow(i);
            }
            rst=this.clienteController.buscarCliente(this.campoNomeCod.getText(), 0);
            DefaultTableModel model = (DefaultTableModel) this.tbCliente.getModel();
            try{
                model.addRow(new Object[]{rst.getInt("idCliente"),rst.getString("nome"),rst.getString("cpf"),rst.getString("endereco"),rst.getString("tel"),rst.getString("dataCadastro"),rst.getString("outros")});
                while(rst.next()){
                    model.addRow(new Object[]{rst.getInt("idCliente"),rst.getString("nome"),rst.getString("cpf"),rst.getString("endereco"),rst.getString("tel"),rst.getString("dataCadastro"),rst.getString("outros")});
                }
            }
            catch(SQLException e){
                JOptionPane.showMessageDialog(null,"NÃ£o foi encontrado nenhum cliente com esse nome!","ATENÃÃO",JOptionPane.INFORMATION_MESSAGE);
            }
        }
        else if(this.comboFormaPesquisa.getSelectedIndex()==2&&!this.campoNomeCod.getText().isEmpty()){
            int rowCount = dm.getRowCount();
            for (int i = rowCount - 1; i >= 0; i--) {
                dm.removeRow(i);
            }
            rst=this.clienteController.buscarCliente("null", Integer.parseInt(this.campoNomeCod.getText()));
            DefaultTableModel model = (DefaultTableModel) this.tbCliente.getModel();
            try{
                model.addRow(new Object[]{rst.getInt("idCliente"),rst.getString("nome"),rst.getString("cpf"),rst.getString("endereco"),rst.getString("tel"),rst.getString("dataCadastro"),rst.getString("outros")});
            }
            catch(SQLException e){
                JOptionPane.showMessageDialog(null,"NÃ£o foi encontrado nenhum cliente com esse cÃ³digo!","ATENÃÃO",JOptionPane.INFORMATION_MESSAGE);
            }
        }
        DefaultTableCellRenderer centerRenderer = new DefaultTableCellRenderer();
        centerRenderer.setHorizontalAlignment( JLabel.CENTER );
        for(int x=0;x<this.tbCliente.getColumnCount();x++){
            this.tbCliente.getColumnModel().getColumn(x).setCellRenderer( centerRenderer );
        }
    }//GEN-LAST:event_btBuscarClienteActionPerformed

    private void comboFormaPesquisaItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_comboFormaPesquisaItemStateChanged
        this.campoNomeCod.setText("");
        DefaultTableModel dm = (DefaultTableModel) this.tbCliente.getModel();
        switch (this.comboFormaPesquisa.getSelectedIndex()) {
            case 0:
                this.campoNomeCod.setEnabled(false);
                this.lbFormaPesquisa.setText("Todos clientes");
                if(cont==0){
                    this.listarClientes(2);
                    cont++;
                }   break;
            case 1:
                {
                    int rowCount = dm.getRowCount();
                    for (int i = rowCount - 1; i >= 0; i--) {
                        dm.removeRow(i);
                    }       this.campoNomeCod.setEnabled(true);
                    this.lbFormaPesquisa.setText("Nome do cliente");
                    cont=0;
                    break;
                }
            default:
                {
                    int rowCount = dm.getRowCount();
                    for (int i = rowCount - 1; i >= 0; i--) {
                        dm.removeRow(i);
                    }       this.campoNomeCod.setEnabled(true);
                    this.lbFormaPesquisa.setText("CÃ³digo do cliente");
                    cont=0;
                    break;
                }
        }
        DefaultTableCellRenderer centerRenderer = new DefaultTableCellRenderer();
        centerRenderer.setHorizontalAlignment( JLabel.CENTER );
        for(int x=0;x<this.tbCliente.getColumnCount();x++){
            this.tbCliente.getColumnModel().getColumn(x).setCellRenderer( centerRenderer );
        }
    }//GEN-LAST:event_comboFormaPesquisaItemStateChanged

    private void btSimRmvActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btSimRmvActionPerformed
        this.clienteController.removerCliente((Integer)this.tbClienteRmv.getValueAt(this.tbClienteRmv.getSelectedRow(),0));
        DefaultTableModel dm = (DefaultTableModel) this.tbClienteRmv.getModel();
        if(this.comboFormaRmv.getSelectedIndex()==0){
            int rowCount = dm.getRowCount();
            for (int i = rowCount - 1; i >= 0; i--) {
                dm.removeRow(i);
            }
            this.listarClientes(1);
        }
        else{
            int rowCount = dm.getRowCount();
            for (int i = rowCount - 1; i >= 0; i--) {
                dm.removeRow(i);
            }
        }
        JOptionPane.showMessageDialog(null,"Cliente removido com sucesso!","ATENÃÃO",JOptionPane.INFORMATION_MESSAGE);
        msgConfirmaRmv.dispose();
    }//GEN-LAST:event_btSimRmvActionPerformed

    private void btNaoRmvActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btNaoRmvActionPerformed
        msgConfirmaRmv.dispose();
    }//GEN-LAST:event_btNaoRmvActionPerformed

    private void campoBairroAddKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_campoBairroAddKeyReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_campoBairroAddKeyReleased

    private void campoCpfAddKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_campoCpfAddKeyReleased
        if(this.campoCpfAdd.getText().contains(" ")){
            this.btAdicionar.setEnabled(false);
            this.campoTelAdd.setEnabled(false);
        }
        else if(!this.campoTelAdd.getText().contains(" ")){
            this.campoTelAdd.setEnabled(true);
            this.btAdicionar.setEnabled(true);
        }
        else{
            this.campoTelAdd.setEnabled(true);
        }
    }//GEN-LAST:event_campoCpfAddKeyReleased

    private void campoTelAddKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_campoTelAddKeyReleased
        if(this.campoTelAdd.getText().isEmpty()){
            this.btAdicionar.setEnabled(false);
        }
        else if(!this.campoTelAdd.getText().contains(" ")){
            this.btAdicionar.setEnabled(true);
        }
        else{
            this.btAdicionar.setEnabled(false);
        }
    }//GEN-LAST:event_campoTelAddKeyReleased

    private void campoNomeAddKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_campoNomeAddKeyTyped
        char c = evt.getKeyChar();
        if(!(Character.isAlphabetic(c) || c == evt.VK_SPACE ||  c==evt.VK_DELETE ))
            evt.consume();
    }//GEN-LAST:event_campoNomeAddKeyTyped

    private void campoEnderecoAddKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_campoEnderecoAddKeyTyped
        char c = evt.getKeyChar();
        if(!(Character.isAlphabetic(c) || c == evt.VK_SPACE ||  c==evt.VK_DELETE ))
            evt.consume();
    }//GEN-LAST:event_campoEnderecoAddKeyTyped

    private void campoBairroAddKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_campoBairroAddKeyTyped
        char c = evt.getKeyChar();
        if(!(Character.isAlphabetic(c) || c == evt.VK_SPACE ||  c==evt.VK_DELETE ))
            evt.consume();
    }//GEN-LAST:event_campoBairroAddKeyTyped

    private void campoCidadeAddKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_campoCidadeAddKeyTyped
        char c = evt.getKeyChar();
        if(!(Character.isAlphabetic(c) || c == evt.VK_SPACE ||  c==evt.VK_DELETE ))
            evt.consume();
    }//GEN-LAST:event_campoCidadeAddKeyTyped

    private void campoNumAddKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_campoNumAddKeyTyped
        char c = evt.getKeyChar();
        if (!((c >= '0') && (c <= '9') || (c == KeyEvent.VK_BACK_SPACE) || (c == KeyEvent.VK_DELETE))) {
            evt.consume();
        }
    }//GEN-LAST:event_campoNumAddKeyTyped

    private void campoNomeCodRmvKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_campoNomeCodRmvKeyTyped
        char c = evt.getKeyChar();
        if(this.lbFormaPesquisaRmv.getText().equals("Nome do cliente")){
            if(!(Character.isAlphabetic(c) || c == evt.VK_SPACE ||  c==evt.VK_DELETE ))
                evt.consume();
        }
        else if(this.lbFormaPesquisaRmv.getText().equals("CÃ³digo do cliente")){
            if (!((c >= '0') && (c <= '9') || (c == KeyEvent.VK_BACK_SPACE) || (c == KeyEvent.VK_DELETE))) {
                evt.consume();
            }
        }
    }//GEN-LAST:event_campoNomeCodRmvKeyTyped

    private void campoNomeCodAltKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_campoNomeCodAltKeyTyped
        char c = evt.getKeyChar();
        if(this.lbFormaPesquisaAlt.getText().equals("Nome do cliente")){
            if(!(Character.isAlphabetic(c) || c == evt.VK_SPACE ||  c==evt.VK_DELETE ))
                evt.consume();
        }
        else if(this.lbFormaPesquisaAlt.getText().equals("CÃ³digo do cliente")){
            if (!((c >= '0') && (c <= '9') || (c == KeyEvent.VK_BACK_SPACE) || (c == KeyEvent.VK_DELETE))) {
                evt.consume();
            }
        }
    }//GEN-LAST:event_campoNomeCodAltKeyTyped

    private void campoNomeCodKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_campoNomeCodKeyTyped
        char c = evt.getKeyChar();
        if(this.lbFormaPesquisa.getText().equals("Nome do cliente")){
            if(!(Character.isAlphabetic(c) || c == evt.VK_SPACE ||  c==evt.VK_DELETE ))
                evt.consume();
        }
        else if(this.lbFormaPesquisa.getText().equals("CÃ³digo do cliente")){
            if (!((c >= '0') && (c <= '9') || (c == KeyEvent.VK_BACK_SPACE) || (c == KeyEvent.VK_DELETE))) {
                evt.consume();
            }
        }
    }//GEN-LAST:event_campoNomeCodKeyTyped
    
    private void listarClientes(int rmvPsq){
        rst=this.clienteController.listarClientes();
        DefaultTableModel model;
        switch (rmvPsq) {
            case 1:
                model = (DefaultTableModel) this.tbClienteRmv.getModel();
                break;
            case 2:
                model = (DefaultTableModel) this.tbCliente.getModel();
                break;
            default:
                model = (DefaultTableModel) this.tbClienteAlt.getModel();
                break;
        }
        try{
            model.addRow(new Object[]{rst.getInt("idCliente"),rst.getString("nome"),rst.getString("cpf"),rst.getString("endereco"),rst.getString("tel"),rst.getString("dataCadastro"),rst.getString("outros")});
            while(rst.next()){
                model.addRow(new Object[]{rst.getInt("idCliente"),rst.getString("nome"),rst.getString("cpf"),rst.getString("endereco"),rst.getString("tel"),rst.getString("dataCadastro"),rst.getString("outros")});
            }
            
        }
        catch(SQLException e){
            System.out.println(e);
        }
    }
    
    private void limparCamposAdd(){
        this.campoNomeAdd.setText("");
        this.campoEnderecoAdd.setText("");
        this.campoBairroAdd.setText("");
        this.campoNumAdd.setText("");
        this.campoCidadeAdd.setText("");
        this.campoComplementoAdd.setText("");
        this.comboUf.setSelectedItem(-1);
        this.campoCpfAdd.setText("");
        this.campoDescricaoAdd.setText("");
        this.campoTelAdd.setText("");
        this.campoTelAdd.setEnabled(false);
        this.campoCpfAdd.setEnabled(false);
    }
    
    private void limparCamposPsq(){
        this.campoNomeCod.setText("");
        this.comboFormaAlt.setSelectedIndex(0);
        this.comboFormaPesquisa.setSelectedIndex(0);
        this.comboFormaRmv.setSelectedIndex(0);
        DefaultTableModel dm = (DefaultTableModel) this.tbCliente.getModel();
        int rowCount = dm.getRowCount();
        for (int i = rowCount - 1; i >= 0; i--) {
            dm.removeRow(i);
        }
    }
    
    private void limparCamposRmv(){
        this.campoNomeCodRmv.setText("");
        this.comboFormaAlt.setSelectedIndex(0);
        this.comboFormaPesquisa.setSelectedIndex(0);
        this.comboFormaRmv.setSelectedIndex(0);
        DefaultTableModel dm = (DefaultTableModel) this.tbClienteRmv.getModel();
        int rowCount = dm.getRowCount();
        for (int i = rowCount - 1; i >= 0; i--) {
            dm.removeRow(i);
        }
    }
    
    private void limparCamposAlt(){
        this.campoNomeCodAlt.setText("");
        this.comboFormaAlt.setSelectedIndex(0);
        this.comboFormaPesquisa.setSelectedIndex(0);
        this.comboFormaRmv.setSelectedIndex(0);
        DefaultTableModel dm = (DefaultTableModel) this.tbClienteAlt.getModel();
        int rowCount = dm.getRowCount();
        for (int i = rowCount - 1; i >= 0; i--) {
            dm.removeRow(i);
        }
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(InterfaceCliente.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            new InterfaceCliente().setVisible(true);
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btAddCliente;
    private javax.swing.JButton btAdicionar;
    private javax.swing.JButton btAlterarCliente;
    private javax.swing.JButton btBuscarAlt;
    private javax.swing.JButton btBuscarCliente;
    private javax.swing.JButton btBuscarRmv;
    private javax.swing.JButton btConsultarCliente;
    private javax.swing.JButton btLimparAdd;
    private javax.swing.JButton btNaoRmv;
    private javax.swing.JButton btRemoverCliente;
    private javax.swing.JButton btRmvCliente;
    private javax.swing.JButton btSimRmv;
    private javax.swing.JButton btVoltar;
    private javax.swing.JTextField campoBairroAdd;
    private javax.swing.JTextField campoCidadeAdd;
    private javax.swing.JTextField campoComplementoAdd;
    private javax.swing.JFormattedTextField campoCpfAdd;
    private javax.swing.JTextArea campoDescricaoAdd;
    private javax.swing.JTextField campoEnderecoAdd;
    private javax.swing.JTextField campoNomeAdd;
    private javax.swing.JTextField campoNomeCod;
    private javax.swing.JTextField campoNomeCodAlt;
    private javax.swing.JTextField campoNomeCodRmv;
    private javax.swing.JTextField campoNumAdd;
    private javax.swing.JFormattedTextField campoTelAdd;
    private javax.swing.JComboBox<String> comboFormaAlt;
    private javax.swing.JComboBox<String> comboFormaPesquisa;
    private javax.swing.JComboBox<String> comboFormaRmv;
    private javax.swing.JComboBox<String> comboUf;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JLabel lbFormaPesquisa;
    private javax.swing.JLabel lbFormaPesquisaAlt;
    private javax.swing.JLabel lbFormaPesquisaRmv;
    private javax.swing.JDialog msgConfirmaRmv;
    private javax.swing.JPanel painelAddCliente;
    private javax.swing.JPanel painelAltCliente;
    private javax.swing.JLayeredPane painelCamadaCliente;
    private javax.swing.JPanel painelCliente;
    private javax.swing.JPanel painelPsqCliente;
    private javax.swing.JPanel painelRmvCliente;
    private javax.swing.JPanel painelSair;
    private javax.swing.JTable tbCliente;
    private javax.swing.JTable tbClienteAlt;
    private javax.swing.JTable tbClienteRmv;
    // End of variables declaration//GEN-END:variables
}
