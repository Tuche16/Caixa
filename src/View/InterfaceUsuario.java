/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package View;

import Controller.UsuarioController;
import java.awt.HeadlessException;
import java.awt.Image;
import java.awt.Toolkit;
import java.awt.event.KeyEvent;
import java.net.URL;
import java.sql.ResultSet;
import java.sql.SQLException;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Pedro
 */
public class InterfaceUsuario extends javax.swing.JFrame {
    
    URL url = this.getClass().getResource("/Imagens/Icone.png");  
    Image iconeTitulo = Toolkit.getDefaultToolkit().getImage(url);  
    private final UsuarioController usuarioController = new UsuarioController();
    private ResultSet rst;
    int cont=0;
    private String nomeAntigo,usuarioAntigo, senhaAntigo, permissaoAntigo, observacaoAntigo, permissaoTb;;
    
    /**
     * Creates new form InterfaceUsuario
     */
    public InterfaceUsuario() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        msgConfirmaRmv4 = new javax.swing.JDialog();
        painelSair4 = new javax.swing.JPanel();
        btSimRmv4 = new javax.swing.JButton();
        btNaoRmv = new javax.swing.JButton();
        painelUsuario = new javax.swing.JPanel();
        btRemoverUsuario = new javax.swing.JButton();
        btAlterarUsuario = new javax.swing.JButton();
        btConsultarUsuario = new javax.swing.JButton();
        btAddUsuario = new javax.swing.JButton();
        btVoltar = new javax.swing.JButton();
        painelCamadaUsuario = new javax.swing.JLayeredPane();
        painelAddUsuario = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        campoNomeAdd = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        campoUsuarioAdd = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        btAdicionar = new javax.swing.JButton();
        btLimparAdd = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        campoDescricaoAdd = new javax.swing.JTextArea();
        jLabel16 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        comboPermissao = new javax.swing.JComboBox<>();
        campoSenhaAdd = new javax.swing.JPasswordField();
        painelRmvUsuario = new javax.swing.JPanel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        comboFormaRmv = new javax.swing.JComboBox<>();
        lbFormaPesquisaRmv = new javax.swing.JLabel();
        campoNomeCodRmv = new javax.swing.JTextField();
        btBuscarRmv = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        tbUsuarioRmv = new javax.swing.JTable();
        btRmvUsuario = new javax.swing.JButton();
        painelAltUsuario = new javax.swing.JPanel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        comboFormaAlt = new javax.swing.JComboBox<>();
        lbFormaPesquisaAlt = new javax.swing.JLabel();
        campoNomeCodAlt = new javax.swing.JTextField();
        btBuscarAlt = new javax.swing.JButton();
        jScrollPane4 = new javax.swing.JScrollPane();
        tbUsuarioAlt = new javax.swing.JTable();
        painelPsqUsuario = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        lbFormaPesquisa = new javax.swing.JLabel();
        campoNomeCod = new javax.swing.JTextField();
        btBuscarFornecedor = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tbUsuario = new javax.swing.JTable();
        comboFormaPesquisa = new javax.swing.JComboBox<>();

        msgConfirmaRmv4.setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        msgConfirmaRmv4.setTitle("Deseja realmente remover o fornecedor?");
        msgConfirmaRmv4.setAlwaysOnTop(true);
        msgConfirmaRmv4.setIconImage(iconeTitulo);
        msgConfirmaRmv4.setLocation(new java.awt.Point(500, 250));
        msgConfirmaRmv4.setMinimumSize(new java.awt.Dimension(265, 70));
        msgConfirmaRmv4.setResizable(false);

        painelSair4.setPreferredSize(new java.awt.Dimension(265, 70));

        btSimRmv4.setText("Sim");
        btSimRmv4.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btSimRmv4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btSimRmv4ActionPerformed(evt);
            }
        });

        btNaoRmv.setText("Não");
        btNaoRmv.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btNaoRmv.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btNaoRmvActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout painelSair4Layout = new javax.swing.GroupLayout(painelSair4);
        painelSair4.setLayout(painelSair4Layout);
        painelSair4Layout.setHorizontalGroup(
            painelSair4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(painelSair4Layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addComponent(btSimRmv4, javax.swing.GroupLayout.DEFAULT_SIZE, 87, Short.MAX_VALUE)
                .addGap(42, 42, 42)
                .addComponent(btNaoRmv, javax.swing.GroupLayout.DEFAULT_SIZE, 88, Short.MAX_VALUE)
                .addGap(24, 24, 24))
        );
        painelSair4Layout.setVerticalGroup(
            painelSair4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, painelSair4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(painelSair4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btSimRmv4)
                    .addComponent(btNaoRmv))
                .addGap(3, 3, 3))
        );

        javax.swing.GroupLayout msgConfirmaRmv4Layout = new javax.swing.GroupLayout(msgConfirmaRmv4.getContentPane());
        msgConfirmaRmv4.getContentPane().setLayout(msgConfirmaRmv4Layout);
        msgConfirmaRmv4Layout.setHorizontalGroup(
            msgConfirmaRmv4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(painelSair4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        msgConfirmaRmv4Layout.setVerticalGroup(
            msgConfirmaRmv4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(painelSair4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Gerenciamento de usuários");
        setLocation(new java.awt.Point(100, 100));
        setResizable(false);

        this.painelAddUsuario.setVisible(true);
        this.painelRmvUsuario.setVisible(false);
        this.painelAltUsuario.setVisible(false);
        this.painelPsqUsuario.setVisible(false);

        btRemoverUsuario.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagens/Remover produto.png"))); // NOI18N
        btRemoverUsuario.setText("Remover usuário");
        btRemoverUsuario.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btRemoverUsuario.setMaximumSize(new java.awt.Dimension(389, 265));
        btRemoverUsuario.setMinimumSize(new java.awt.Dimension(389, 265));
        btRemoverUsuario.setPreferredSize(new java.awt.Dimension(389, 265));
        btRemoverUsuario.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btRemoverUsuarioActionPerformed(evt);
            }
        });

        btAlterarUsuario.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagens/Editar produto.png"))); // NOI18N
        btAlterarUsuario.setText("Alterar usuário");
        btAlterarUsuario.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btAlterarUsuario.setMaximumSize(new java.awt.Dimension(389, 265));
        btAlterarUsuario.setMinimumSize(new java.awt.Dimension(389, 265));
        btAlterarUsuario.setPreferredSize(new java.awt.Dimension(389, 265));
        btAlterarUsuario.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btAlterarUsuarioActionPerformed(evt);
            }
        });

        btConsultarUsuario.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagens/Consultar produto.png"))); // NOI18N
        btConsultarUsuario.setText("Consultar usuário");
        btConsultarUsuario.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btConsultarUsuario.setMaximumSize(new java.awt.Dimension(389, 265));
        btConsultarUsuario.setMinimumSize(new java.awt.Dimension(389, 265));
        btConsultarUsuario.setPreferredSize(new java.awt.Dimension(389, 265));
        btConsultarUsuario.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btConsultarUsuarioActionPerformed(evt);
            }
        });

        btAddUsuario.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagens/Adicionar produto.png"))); // NOI18N
        btAddUsuario.setText("Adicionar usuário");
        btAddUsuario.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btAddUsuario.setEnabled(false);
        btAddUsuario.setMaximumSize(new java.awt.Dimension(389, 265));
        btAddUsuario.setMinimumSize(new java.awt.Dimension(389, 265));
        btAddUsuario.setPreferredSize(new java.awt.Dimension(389, 265));
        btAddUsuario.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btAddUsuarioActionPerformed(evt);
            }
        });

        btVoltar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagens/Voltar.png"))); // NOI18N
        btVoltar.setText("Voltar");
        btVoltar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btVoltar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btVoltarActionPerformed(evt);
            }
        });

        painelCamadaUsuario.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED, java.awt.Color.lightGray, java.awt.Color.white, java.awt.Color.darkGray, java.awt.Color.gray));

        jLabel1.setText("Nome completo*:");

        campoNomeAdd.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                campoNomeAddKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                campoNomeAddKeyTyped(evt);
            }
        });

        jLabel2.setText("Usuário*:");

        campoUsuarioAdd.setEnabled(false);
        campoUsuarioAdd.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                campoUsuarioAddKeyReleased(evt);
            }
        });

        jLabel5.setText("Observações");

        btAdicionar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagens/Finalizar adicionado.png"))); // NOI18N
        btAdicionar.setText("Adicionar");
        btAdicionar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btAdicionar.setEnabled(false);
        btAdicionar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btAdicionarActionPerformed(evt);
            }
        });

        btLimparAdd.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagens/Limpar campos.png"))); // NOI18N
        btLimparAdd.setText("Limpar campos");
        btLimparAdd.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btLimparAdd.setEnabled(false);
        btLimparAdd.setMaximumSize(new java.awt.Dimension(139, 31));
        btLimparAdd.setMinimumSize(new java.awt.Dimension(139, 31));
        btLimparAdd.setPreferredSize(new java.awt.Dimension(139, 31));
        btLimparAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btLimparAddActionPerformed(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(0, 102, 102));
        jLabel4.setText("ADICIONAR USUÁRIO");

        campoDescricaoAdd.setColumns(20);
        campoDescricaoAdd.setRows(5);
        jScrollPane2.setViewportView(campoDescricaoAdd);

        jLabel16.setText("Nível de permissão:");

        jLabel17.setText("Senha*:");

        comboPermissao.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Administrador", "Funcionário" }));

        campoSenhaAdd.setEnabled(false);
        campoSenhaAdd.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                campoSenhaAddKeyReleased(evt);
            }
        });

        javax.swing.GroupLayout painelAddUsuarioLayout = new javax.swing.GroupLayout(painelAddUsuario);
        painelAddUsuario.setLayout(painelAddUsuarioLayout);
        painelAddUsuarioLayout.setHorizontalGroup(
            painelAddUsuarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(painelAddUsuarioLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, 273, Short.MAX_VALUE)
                .addGap(880, 880, 880))
            .addGroup(painelAddUsuarioLayout.createSequentialGroup()
                .addGroup(painelAddUsuarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 1093, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(painelAddUsuarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(painelAddUsuarioLayout.createSequentialGroup()
                            .addGap(818, 818, 818)
                            .addComponent(btLimparAdd, javax.swing.GroupLayout.PREFERRED_SIZE, 165, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(30, 30, 30)
                            .addComponent(btAdicionar))
                        .addGroup(painelAddUsuarioLayout.createSequentialGroup()
                            .addGap(22, 22, 22)
                            .addGroup(painelAddUsuarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 196, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGroup(painelAddUsuarioLayout.createSequentialGroup()
                                    .addGap(2, 2, 2)
                                    .addGroup(painelAddUsuarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addComponent(jLabel2)
                                        .addComponent(jLabel17)
                                        .addComponent(jLabel1))
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addGroup(painelAddUsuarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(campoNomeAdd, javax.swing.GroupLayout.PREFERRED_SIZE, 408, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGroup(painelAddUsuarioLayout.createSequentialGroup()
                                            .addGroup(painelAddUsuarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                                .addComponent(campoSenhaAdd)
                                                .addComponent(campoUsuarioAdd, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addGap(45, 45, 45)
                                            .addComponent(jLabel16)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                            .addComponent(comboPermissao, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        painelAddUsuarioLayout.setVerticalGroup(
            painelAddUsuarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(painelAddUsuarioLayout.createSequentialGroup()
                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(30, 30, 30)
                .addGroup(painelAddUsuarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(campoNomeAdd, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(painelAddUsuarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(campoUsuarioAdd, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(painelAddUsuarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel17)
                    .addComponent(comboPermissao, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel16)
                    .addComponent(campoSenhaAdd, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 210, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(painelAddUsuarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btLimparAdd, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btAdicionar, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        jLabel8.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(0, 102, 102));
        jLabel8.setText("REMOVER USUÁRIO");

        jLabel9.setText("Forma de pesquisa");

        comboFormaRmv.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Todos usuários", "Nome do usuário", "Código do usuário" }));
        comboFormaRmv.setToolTipText("");
        comboFormaRmv.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        comboFormaRmv.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                comboFormaRmvItemStateChanged(evt);
            }
        });

        lbFormaPesquisaRmv.setText("Todos usuários");

        campoNomeCodRmv.setEnabled(false);
        campoNomeCodRmv.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                campoNomeCodRmvKeyTyped(evt);
            }
        });

        btBuscarRmv.setText("Buscar");
        btBuscarRmv.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btBuscarRmv.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btBuscarRmvActionPerformed(evt);
            }
        });

        tbUsuarioRmv.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Código", "Nome completo", "Usuário", "Senha", "Permissão", "Data de cadastro", "Observações"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tbUsuarioRmv.getTableHeader().setReorderingAllowed(false);
        tbUsuarioRmv.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tbUsuarioRmvMouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(tbUsuarioRmv);

        btRmvUsuario.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagens/Finalizar removido.png"))); // NOI18N
        btRmvUsuario.setText("Remover usuário");
        btRmvUsuario.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btRmvUsuario.setEnabled(false);
        btRmvUsuario.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btRmvUsuarioActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout painelRmvUsuarioLayout = new javax.swing.GroupLayout(painelRmvUsuario);
        painelRmvUsuario.setLayout(painelRmvUsuarioLayout);
        painelRmvUsuarioLayout.setHorizontalGroup(
            painelRmvUsuarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(painelRmvUsuarioLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 232, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, painelRmvUsuarioLayout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addGroup(painelRmvUsuarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, painelRmvUsuarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 1079, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(lbFormaPesquisaRmv)
                        .addGroup(painelRmvUsuarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(painelRmvUsuarioLayout.createSequentialGroup()
                                .addComponent(jLabel9)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(comboFormaRmv, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, painelRmvUsuarioLayout.createSequentialGroup()
                                .addComponent(campoNomeCodRmv, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btBuscarRmv, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addComponent(btRmvUsuario, javax.swing.GroupLayout.Alignment.TRAILING))
                .addGap(26, 26, 26))
        );
        painelRmvUsuarioLayout.setVerticalGroup(
            painelRmvUsuarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(painelRmvUsuarioLayout.createSequentialGroup()
                .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(30, 30, 30)
                .addGroup(painelRmvUsuarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(comboFormaRmv, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(lbFormaPesquisaRmv)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(painelRmvUsuarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(campoNomeCodRmv, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btBuscarRmv))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 243, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btRmvUsuario)
                .addContainerGap())
        );

        jLabel10.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(0, 102, 102));
        jLabel10.setText("ALTERAR FORNECEDOR");

        jLabel11.setText("Forma de pesquisa");

        comboFormaAlt.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Todos usuários", "Nome do usuário", "Código do usuário" }));
        comboFormaAlt.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        comboFormaAlt.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                comboFormaAltItemStateChanged(evt);
            }
        });

        lbFormaPesquisaAlt.setText("Todos usuários");

        campoNomeCodAlt.setEnabled(false);
        campoNomeCodAlt.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                campoNomeCodAltKeyTyped(evt);
            }
        });

        btBuscarAlt.setText("Buscar");
        btBuscarAlt.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btBuscarAlt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btBuscarAltActionPerformed(evt);
            }
        });

        tbUsuarioAlt.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Código", "Nome completo", "Usuário", "Senha", "Permissão", "Data de cadastro", "Observações"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, true, true, true, true, false, true
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tbUsuarioAlt.getTableHeader().setReorderingAllowed(false);
        tbUsuarioAlt.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tbUsuarioAltMouseClicked(evt);
            }
        });
        tbUsuarioAlt.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                tbUsuarioAltPropertyChange(evt);
            }
        });
        jScrollPane4.setViewportView(tbUsuarioAlt);

        javax.swing.GroupLayout painelAltUsuarioLayout = new javax.swing.GroupLayout(painelAltUsuario);
        painelAltUsuario.setLayout(painelAltUsuarioLayout);
        painelAltUsuarioLayout.setHorizontalGroup(
            painelAltUsuarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(painelAltUsuarioLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 232, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, painelAltUsuarioLayout.createSequentialGroup()
                .addGap(6, 6, 6)
                .addGroup(painelAltUsuarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 1079, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lbFormaPesquisaAlt)
                    .addGroup(painelAltUsuarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addGroup(painelAltUsuarioLayout.createSequentialGroup()
                            .addComponent(jLabel11)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(comboFormaAlt, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, painelAltUsuarioLayout.createSequentialGroup()
                            .addComponent(campoNomeCodAlt, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(btBuscarAlt, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(26, 26, 26))
        );
        painelAltUsuarioLayout.setVerticalGroup(
            painelAltUsuarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(painelAltUsuarioLayout.createSequentialGroup()
                .addGap(0, 0, 0)
                .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(30, 30, 30)
                .addGroup(painelAltUsuarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel11)
                    .addComponent(comboFormaAlt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(lbFormaPesquisaAlt)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(painelAltUsuarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(campoNomeCodAlt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btBuscarAlt))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 280, Short.MAX_VALUE)
                .addContainerGap())
        );

        painelPsqUsuario.setPreferredSize(new java.awt.Dimension(1113, 395));

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(0, 102, 102));
        jLabel6.setText("CONSULTAR USUÁRIO");

        jLabel7.setText("Forma de pesquisa");

        lbFormaPesquisa.setText("Todos usuários");

        campoNomeCod.setEnabled(false);
        campoNomeCod.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                campoNomeCodKeyTyped(evt);
            }
        });

        btBuscarFornecedor.setText("Buscar");
        btBuscarFornecedor.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btBuscarFornecedor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btBuscarFornecedorActionPerformed(evt);
            }
        });

        tbUsuario.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Código", "Nome completo", "Usuário", "Senha", "Permissão", "Data de cadastro", "Observações"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tbUsuario.getTableHeader().setReorderingAllowed(false);
        jScrollPane1.setViewportView(tbUsuario);

        comboFormaPesquisa.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Todos usuários", "Nome do usuário", "Código do usuário" }));
        comboFormaPesquisa.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        comboFormaPesquisa.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                comboFormaPesquisaItemStateChanged(evt);
            }
        });

        javax.swing.GroupLayout painelPsqUsuarioLayout = new javax.swing.GroupLayout(painelPsqUsuario);
        painelPsqUsuario.setLayout(painelPsqUsuarioLayout);
        painelPsqUsuarioLayout.setHorizontalGroup(
            painelPsqUsuarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, painelPsqUsuarioLayout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 1116, Short.MAX_VALUE)
                .addGap(26, 26, 26))
            .addGroup(painelPsqUsuarioLayout.createSequentialGroup()
                .addGroup(painelPsqUsuarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(painelPsqUsuarioLayout.createSequentialGroup()
                        .addGap(21, 21, 21)
                        .addGroup(painelPsqUsuarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lbFormaPesquisa)
                            .addGroup(painelPsqUsuarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addGroup(painelPsqUsuarioLayout.createSequentialGroup()
                                    .addComponent(jLabel7)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(comboFormaPesquisa, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, painelPsqUsuarioLayout.createSequentialGroup()
                                    .addComponent(campoNomeCod, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(btBuscarFornecedor, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                    .addGroup(painelPsqUsuarioLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel6)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        painelPsqUsuarioLayout.setVerticalGroup(
            painelPsqUsuarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(painelPsqUsuarioLayout.createSequentialGroup()
                .addGap(0, 0, 0)
                .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(30, 30, 30)
                .addGroup(painelPsqUsuarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(comboFormaPesquisa, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(lbFormaPesquisa)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(painelPsqUsuarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(campoNomeCod, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btBuscarFornecedor))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 280, Short.MAX_VALUE)
                .addContainerGap())
        );

        painelCamadaUsuario.setLayer(painelAddUsuario, javax.swing.JLayeredPane.DEFAULT_LAYER);
        painelCamadaUsuario.setLayer(painelRmvUsuario, javax.swing.JLayeredPane.DEFAULT_LAYER);
        painelCamadaUsuario.setLayer(painelAltUsuario, javax.swing.JLayeredPane.DEFAULT_LAYER);
        painelCamadaUsuario.setLayer(painelPsqUsuario, javax.swing.JLayeredPane.DEFAULT_LAYER);

        javax.swing.GroupLayout painelCamadaUsuarioLayout = new javax.swing.GroupLayout(painelCamadaUsuario);
        painelCamadaUsuario.setLayout(painelCamadaUsuarioLayout);
        painelCamadaUsuarioLayout.setHorizontalGroup(
            painelCamadaUsuarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(painelAddUsuario, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(painelCamadaUsuarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(painelRmvUsuario, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(painelCamadaUsuarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(painelAltUsuario, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(painelCamadaUsuarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(painelPsqUsuario, javax.swing.GroupLayout.DEFAULT_SIZE, 1163, Short.MAX_VALUE))
        );
        painelCamadaUsuarioLayout.setVerticalGroup(
            painelCamadaUsuarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(painelAddUsuario, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(painelCamadaUsuarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(painelRmvUsuario, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(painelCamadaUsuarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(painelAltUsuario, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(painelCamadaUsuarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(painelPsqUsuario, javax.swing.GroupLayout.DEFAULT_SIZE, 433, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout painelUsuarioLayout = new javax.swing.GroupLayout(painelUsuario);
        painelUsuario.setLayout(painelUsuarioLayout);
        painelUsuarioLayout.setHorizontalGroup(
            painelUsuarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(painelUsuarioLayout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addGroup(painelUsuarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(painelUsuarioLayout.createSequentialGroup()
                        .addComponent(btAddUsuario, javax.swing.GroupLayout.PREFERRED_SIZE, 1, Short.MAX_VALUE)
                        .addGap(102, 102, 102)
                        .addComponent(btRemoverUsuario, javax.swing.GroupLayout.PREFERRED_SIZE, 1, Short.MAX_VALUE)
                        .addGap(102, 102, 102)
                        .addComponent(btAlterarUsuario, javax.swing.GroupLayout.PREFERRED_SIZE, 1, Short.MAX_VALUE)
                        .addGap(102, 102, 102)
                        .addComponent(btConsultarUsuario, javax.swing.GroupLayout.PREFERRED_SIZE, 1, Short.MAX_VALUE))
                    .addComponent(painelCamadaUsuario)
                    .addGroup(painelUsuarioLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(btVoltar)))
                .addGap(19, 19, 19))
        );
        painelUsuarioLayout.setVerticalGroup(
            painelUsuarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(painelUsuarioLayout.createSequentialGroup()
                .addGap(9, 9, 9)
                .addGroup(painelUsuarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(painelUsuarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(btAlterarUsuario, javax.swing.GroupLayout.PREFERRED_SIZE, 52, Short.MAX_VALUE)
                        .addComponent(btConsultarUsuario, javax.swing.GroupLayout.PREFERRED_SIZE, 52, Short.MAX_VALUE))
                    .addGroup(painelUsuarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(btAddUsuario, javax.swing.GroupLayout.PREFERRED_SIZE, 52, Short.MAX_VALUE)
                        .addComponent(btRemoverUsuario, javax.swing.GroupLayout.PREFERRED_SIZE, 52, Short.MAX_VALUE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(painelCamadaUsuario)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btVoltar, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(5, 5, 5))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(painelUsuario, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(painelUsuario, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    
    private void limparCamposAdd(){
        this.campoNomeAdd.setText("");
        this.comboPermissao.setSelectedItem(-1);
        this.campoUsuarioAdd.setText("");
        this.campoDescricaoAdd.setText("");
        this.campoSenhaAdd.setText("");
    }
    
    private void limparCamposPsq(){
        this.campoNomeCod.setText("");
        this.comboFormaAlt.setSelectedIndex(0);
        this.comboFormaPesquisa.setSelectedIndex(0);
        this.comboFormaRmv.setSelectedIndex(0);
        DefaultTableModel dm = (DefaultTableModel) this.tbUsuario.getModel();
        int rowCount = dm.getRowCount();
        for (int i = rowCount - 1; i >= 0; i--) {
            dm.removeRow(i);
        }
    }
    
    private void limparCamposRmv(){
        this.campoNomeCodRmv.setText("");
        this.comboFormaAlt.setSelectedIndex(0);
        this.comboFormaPesquisa.setSelectedIndex(0);
        this.comboFormaRmv.setSelectedIndex(0);
        DefaultTableModel dm = (DefaultTableModel) this.tbUsuarioRmv.getModel();
        int rowCount = dm.getRowCount();
        for (int i = rowCount - 1; i >= 0; i--) {
            dm.removeRow(i);
        }
    }
    
    private void limparCamposAlt(){
        this.campoNomeCodAlt.setText("");
        this.comboFormaAlt.setSelectedIndex(0);
        this.comboFormaPesquisa.setSelectedIndex(0);
        this.comboFormaRmv.setSelectedIndex(0);
        DefaultTableModel dm = (DefaultTableModel) this.tbUsuarioAlt.getModel();
        int rowCount = dm.getRowCount();
        for (int i = rowCount - 1; i >= 0; i--) {
            dm.removeRow(i);
        }
    }
    
    private void listarUsuarios(int rmvPsq){
        rst=this.usuarioController.listarUsuarios();
        
        DefaultTableModel model;
        switch (rmvPsq) {
            case 1:
                model = (DefaultTableModel) this.tbUsuarioRmv.getModel();
                break;
            case 2:
                model = (DefaultTableModel) this.tbUsuario.getModel();
                break;
            default:
                model = (DefaultTableModel) this.tbUsuarioAlt.getModel();
                break;
        }
        try{
            if(rst.getBoolean("permissao")){
                permissaoTb="Administrador";
            }
            else{
                permissaoTb="Funcionário";
            }
            model.addRow(new Object[]{rst.getInt("idusuario"),rst.getString("nomeCompleto"),rst.getString("usuario"),rst.getString("senha"),permissaoTb,rst.getString("dataCadastro"),rst.getString("observacao")});
            while(rst.next()){
                if(rst.getBoolean("permissao")){
                    permissaoTb="Administrador";
                }
                else{
                    permissaoTb="Funcionário";
                }
                model.addRow(new Object[]{rst.getInt("idusuario"),rst.getString("nomeCompleto"),rst.getString("usuario"),rst.getString("senha"),permissaoTb,rst.getString("dataCadastro"),rst.getString("observacao")});
            }
        }
        catch(SQLException e){
            System.out.println(e);
        }
    }
    
    private void btRemoverUsuarioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btRemoverUsuarioActionPerformed
        limparCamposPsq();
        limparCamposAdd();
        limparCamposAlt();
        this.listarUsuarios(1);
        this.btRmvUsuario.setEnabled(false);
        this.btAddUsuario.setEnabled(true);
        this.btRemoverUsuario.setEnabled(false);
        this.btAlterarUsuario.setEnabled(true);
        this.btConsultarUsuario.setEnabled(true);
        this.painelAddUsuario.setVisible(false);
        this.painelRmvUsuario.setVisible(true);
        this.painelAltUsuario.setVisible(false);
        this.painelPsqUsuario.setVisible(false);
        DefaultTableCellRenderer centerRenderer = new DefaultTableCellRenderer();
        centerRenderer.setHorizontalAlignment( JLabel.CENTER );
        for(int x=0;x<this.tbUsuarioRmv.getColumnCount();x++){
            this.tbUsuarioRmv.getColumnModel().getColumn(x).setCellRenderer( centerRenderer );
        }
    }//GEN-LAST:event_btRemoverUsuarioActionPerformed

    private void btAlterarUsuarioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btAlterarUsuarioActionPerformed
        limparCamposPsq();
        limparCamposAdd();
        limparCamposRmv();
        this.listarUsuarios(3);
        this.btAddUsuario.setEnabled(true);
        this.btRemoverUsuario.setEnabled(true);
        this.btAlterarUsuario.setEnabled(false);
        this.btConsultarUsuario.setEnabled(true);
        this.painelAddUsuario.setVisible(false);
        this.painelRmvUsuario.setVisible(false);
        this.painelAltUsuario.setVisible(true);
        this.painelPsqUsuario.setVisible(false);
        DefaultTableCellRenderer centerRenderer = new DefaultTableCellRenderer();
        centerRenderer.setHorizontalAlignment( JLabel.CENTER );
        for(int x=0;x<this.tbUsuarioAlt.getColumnCount();x++){
            this.tbUsuarioAlt.getColumnModel().getColumn(x).setCellRenderer( centerRenderer );
        }
    }//GEN-LAST:event_btAlterarUsuarioActionPerformed

    private void btConsultarUsuarioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btConsultarUsuarioActionPerformed
        this.listarUsuarios(2);
        limparCamposAdd();
        limparCamposRmv();
        limparCamposAlt();
        this.btAddUsuario.setEnabled(true);
        this.btRemoverUsuario.setEnabled(true);
        this.btAlterarUsuario.setEnabled(true);
        this.btConsultarUsuario.setEnabled(false);
        this.painelAddUsuario.setVisible(false);
        this.painelRmvUsuario.setVisible(false);
        this.painelAltUsuario.setVisible(false);
        this.painelPsqUsuario.setVisible(true);
        DefaultTableCellRenderer centerRenderer = new DefaultTableCellRenderer();
        centerRenderer.setHorizontalAlignment( JLabel.CENTER );
        for(int x=0;x<this.tbUsuario.getColumnCount();x++){
            this.tbUsuario.getColumnModel().getColumn(x).setCellRenderer( centerRenderer );
        }
    }//GEN-LAST:event_btConsultarUsuarioActionPerformed

    private void btAddUsuarioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btAddUsuarioActionPerformed
        limparCamposPsq();
        limparCamposRmv();
        limparCamposAlt();
        this.campoUsuarioAdd.setEnabled(false);
        this.btAdicionar.setEnabled(false);
        this.btLimparAdd.setEnabled(false);
        this.btAddUsuario.setEnabled(false);
        this.btRemoverUsuario.setEnabled(true);
        this.btAlterarUsuario.setEnabled(true);
        this.btConsultarUsuario.setEnabled(true);
        this.painelAddUsuario.setVisible(true);
        this.painelRmvUsuario.setVisible(false);
        this.painelAltUsuario.setVisible(false);
        this.painelPsqUsuario.setVisible(false);
    }//GEN-LAST:event_btAddUsuarioActionPerformed

    private void btVoltarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btVoltarActionPerformed
        limparCamposPsq();
        limparCamposAdd();
        this.dispose();
    }//GEN-LAST:event_btVoltarActionPerformed

    private void campoNomeAddKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_campoNomeAddKeyReleased
        if(this.campoNomeAdd.getText().isEmpty()){
            this.btAdicionar.setEnabled(false);
            this.campoUsuarioAdd.setEnabled(false);
            this.campoSenhaAdd.setEnabled(false);
        }
        else if(!this.campoUsuarioAdd.getText().isEmpty()&&!this.campoSenhaAdd.getText().isEmpty()){
            this.campoUsuarioAdd.setEnabled(true);
            this.campoSenhaAdd.setEnabled(true);
            this.btAdicionar.setEnabled(true);
        }
        else if(!this.campoUsuarioAdd.getText().isEmpty()){
            this.campoUsuarioAdd.setEnabled(true);
        }
        else{
            this.btLimparAdd.setEnabled(true);
            this.campoUsuarioAdd.setEnabled(true);
        }
    }//GEN-LAST:event_campoNomeAddKeyReleased

    private void campoUsuarioAddKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_campoUsuarioAddKeyReleased
        if(this.campoUsuarioAdd.getText().isEmpty()){
            this.btAdicionar.setEnabled(false);
            this.campoSenhaAdd.setEnabled(false);
        }
        else if(!this.campoSenhaAdd.getText().isEmpty()){
            this.btAdicionar.setEnabled(true);
            this.campoSenhaAdd.setEnabled(true);
        }
        else{
            this.campoSenhaAdd.setEnabled(true);
        }
    }//GEN-LAST:event_campoUsuarioAddKeyReleased

    private void btAdicionarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btAdicionarActionPerformed
        try{
            this.usuarioController.adicionarUsuario(this.campoNomeAdd.getText(), this.campoUsuarioAdd.getText(),
                this.campoSenhaAdd.getText(),this.comboPermissao.getSelectedItem().toString(), this.campoDescricaoAdd.getText());
            JOptionPane.showMessageDialog(null,"Usuário adicionado com sucesso!","ATENÇÃO",JOptionPane.INFORMATION_MESSAGE);
        }
        catch(HeadlessException e){
            JOptionPane.showMessageDialog(null,"Preencha os campos corretamente!","ATENÇÃO",JOptionPane.INFORMATION_MESSAGE);
        }
        limparCamposAdd();
    }//GEN-LAST:event_btAdicionarActionPerformed

    private void btLimparAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btLimparAddActionPerformed
        limparCamposAdd();
        this.campoUsuarioAdd.setEnabled(false);
        this.campoSenhaAdd.setEnabled(false);
        this.btLimparAdd.setEnabled(false);
        this.btAdicionar.setEnabled(false);
    }//GEN-LAST:event_btLimparAddActionPerformed

    private void comboFormaAltItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_comboFormaAltItemStateChanged
        this.campoNomeCodAlt.setText("");
        DefaultTableModel dm = (DefaultTableModel) this.tbUsuarioAlt.getModel();
        switch (this.comboFormaAlt.getSelectedIndex()) {
            case 0:
                this.campoNomeCodAlt.setEnabled(false);
                this.lbFormaPesquisaAlt.setText("Todos usuários");
                if(cont==0){
                    this.listarUsuarios(3);
                    cont++;
                }   this.btRmvUsuario.setEnabled(false);
                break;
            case 1:
                {
                    int rowCount = dm.getRowCount();
                    for (int i = rowCount - 1; i >= 0; i--) {
                        dm.removeRow(i);
                    }       this.campoNomeCodAlt.setEnabled(true);
                    this.lbFormaPesquisaAlt.setText("Nome do usuário");
                    cont=0;
                    this.btRmvUsuario.setEnabled(false);
                    break;
                }
            default:
                {
                    int rowCount = dm.getRowCount();
                    for (int i = rowCount - 1; i >= 0; i--) {
                        dm.removeRow(i);
                    }       this.campoNomeCodAlt.setEnabled(true);
                    this.lbFormaPesquisaAlt.setText("Código do usuário");
                    cont=0;
                    this.btRmvUsuario.setEnabled(false);
                    break;
                }
        }
        DefaultTableCellRenderer centerRenderer = new DefaultTableCellRenderer();
        centerRenderer.setHorizontalAlignment( JLabel.CENTER );
        for(int x=0;x<this.tbUsuarioAlt.getColumnCount();x++){
            this.tbUsuarioAlt.getColumnModel().getColumn(x).setCellRenderer( centerRenderer );
        }
    }//GEN-LAST:event_comboFormaAltItemStateChanged

    private void btBuscarAltActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btBuscarAltActionPerformed
        DefaultTableModel dm = (DefaultTableModel) this.tbUsuarioAlt.getModel();
        if(this.comboFormaAlt.getSelectedIndex()==0&&this.tbUsuarioAlt.getRowCount()<0){
            this.listarUsuarios(1);
        }
        else if(this.comboFormaAlt.getSelectedIndex()==1&&!this.campoNomeCodAlt.getText().isEmpty()){
            int rowCount = dm.getRowCount();
            for (int i = rowCount - 1; i >= 0; i--) {
                dm.removeRow(i);
            }
            rst=this.usuarioController.buscarUsuario(this.campoNomeCodAlt.getText(), 0);
            DefaultTableModel model = (DefaultTableModel) this.tbUsuarioAlt.getModel();
            try{
                if(rst.getBoolean("permissao")){
                    permissaoTb="Administrador";
                }
                else{
                    permissaoTb="Funcionário";
                }
                model.addRow(new Object[]{rst.getInt("idusuario"),rst.getString("nomeCompleto"),rst.getString("usuario"),rst.getString("senha"),permissaoTb,rst.getString("dataCadastro"),rst.getString("observacao")});
                while(rst.next()){
                    if(rst.getBoolean("permissao")){
                        permissaoTb="Administrador";
                    }
                    else{
                        permissaoTb="Funcionário";
                    }
                    model.addRow(new Object[]{rst.getInt("idusuario"),rst.getString("nomeCompleto"),rst.getString("usuario"),rst.getString("senha"),permissaoTb,rst.getString("dataCadastro"),rst.getString("observacao")});
                }
            }
            catch(SQLException e){
                JOptionPane.showMessageDialog(null,"Não foi encontrado nenhum usuário com esse nome!","ATENÇÃO",JOptionPane.INFORMATION_MESSAGE);
            }
        }
        else if(this.comboFormaAlt.getSelectedIndex()==2&&!this.campoNomeCodAlt.getText().isEmpty()){
            int rowCount = dm.getRowCount();
            for (int i = rowCount - 1; i >= 0; i--) {
                dm.removeRow(i);
            }
            rst=this.usuarioController.buscarUsuario("null", Integer.parseInt(this.campoNomeCodAlt.getText()));
            DefaultTableModel model = (DefaultTableModel) this.tbUsuarioAlt.getModel();
            try{
                if(rst.getBoolean("permissao")){
                    permissaoTb="Administrador";
                }
                else{
                    permissaoTb="Funcionário";
                }
                model.addRow(new Object[]{rst.getInt("idusuario"),rst.getString("nomeCompleto"),rst.getString("usuario"),rst.getString("senha"),permissaoTb,rst.getString("dataCadastro"),rst.getString("observacao")});
                while(rst.next()){
                    if(rst.getBoolean("permissao")){
                        permissaoTb="Administrador";
                    }
                    else{
                        permissaoTb="Funcionário";
                    }
                    model.addRow(new Object[]{rst.getInt("idusuario"),rst.getString("nomeCompleto"),rst.getString("usuario"),rst.getString("senha"),permissaoTb,rst.getString("dataCadastro"),rst.getString("observacao")});
                }
            }
            catch(SQLException e){
                JOptionPane.showMessageDialog(null,"Não foi encontrado nenhum usuário com esse código!","ATENÇÃO",JOptionPane.INFORMATION_MESSAGE);
            }
        }
        DefaultTableCellRenderer centerRenderer = new DefaultTableCellRenderer();
        centerRenderer.setHorizontalAlignment( JLabel.CENTER );
        for(int x=0;x<this.tbUsuarioAlt.getColumnCount();x++){
            this.tbUsuarioAlt.getColumnModel().getColumn(x).setCellRenderer( centerRenderer );
        }
    }//GEN-LAST:event_btBuscarAltActionPerformed

    private void tbUsuarioAltMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tbUsuarioAltMouseClicked
        if(this.tbUsuarioAlt.getSelectedRow()>=0){
            nomeAntigo = String.valueOf(this.tbUsuarioAlt.getValueAt(this.tbUsuarioAlt.getSelectedRow(), 1));
            usuarioAntigo = String.valueOf(this.tbUsuarioAlt.getValueAt(this.tbUsuarioAlt.getSelectedRow(), 2));
            senhaAntigo = String.valueOf(this.tbUsuarioAlt.getValueAt(this.tbUsuarioAlt.getSelectedRow(), 3));
            permissaoAntigo = String.valueOf(this.tbUsuarioAlt.getValueAt(this.tbUsuarioAlt.getSelectedRow(), 4));
            observacaoAntigo = String.valueOf(this.tbUsuarioAlt.getValueAt(this.tbUsuarioAlt.getSelectedRow(), 6));
        }
    }//GEN-LAST:event_tbUsuarioAltMouseClicked

    private void tbUsuarioAltPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_tbUsuarioAltPropertyChange
        if(this.tbUsuarioAlt.getSelectedRow()>=0){
            if(!String.valueOf(this.tbUsuarioAlt.getValueAt(this.tbUsuarioAlt.getSelectedRow(), 1)).equals(nomeAntigo)||
                !String.valueOf(this.tbUsuarioAlt.getValueAt(this.tbUsuarioAlt.getSelectedRow(), 1)).equals(usuarioAntigo)||
                !String.valueOf(this.tbUsuarioAlt.getValueAt(this.tbUsuarioAlt.getSelectedRow(), 1)).equals(senhaAntigo)||
                !String.valueOf(this.tbUsuarioAlt.getValueAt(this.tbUsuarioAlt.getSelectedRow(), 5)).equals(permissaoAntigo)||
                !String.valueOf(this.tbUsuarioAlt.getValueAt(this.tbUsuarioAlt.getSelectedRow(), 6)).equals(observacaoAntigo))
            {
                this.usuarioController.alterarUsuario((Integer) this.tbUsuarioAlt.getValueAt(this.tbUsuarioAlt.getSelectedRow(), 0),
                    String.valueOf(this.tbUsuarioAlt.getValueAt(this.tbUsuarioAlt.getSelectedRow(), 1)),
                    String.valueOf(this.tbUsuarioAlt.getValueAt(this.tbUsuarioAlt.getSelectedRow(), 2)),
                    String.valueOf(this.tbUsuarioAlt.getValueAt(this.tbUsuarioAlt.getSelectedRow(), 3)),
                    String.valueOf(this.tbUsuarioAlt.getValueAt(this.tbUsuarioAlt.getSelectedRow(), 4)),
                    String.valueOf(this.tbUsuarioAlt.getValueAt(this.tbUsuarioAlt.getSelectedRow(), 6))
                );
            }
        }
    }//GEN-LAST:event_tbUsuarioAltPropertyChange

    private void btBuscarFornecedorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btBuscarFornecedorActionPerformed
        DefaultTableModel dm = (DefaultTableModel) this.tbUsuario.getModel();
        if(this.comboFormaPesquisa.getSelectedIndex()==0&&this.tbUsuario.getRowCount()<0){
            this.listarUsuarios(2);
        }
        else if(this.comboFormaPesquisa.getSelectedIndex()==1&&!this.campoNomeCod.getText().isEmpty()){
            int rowCount = dm.getRowCount();
            for (int i = rowCount - 1; i >= 0; i--) {
                dm.removeRow(i);
            }
            rst=this.usuarioController.buscarUsuario(this.campoNomeCod.getText(), 0);
            DefaultTableModel model = (DefaultTableModel) this.tbUsuario.getModel();
            try{
                if(rst.getBoolean("permissao")){
                    permissaoTb="Administrador";
                }
                else{
                    permissaoTb="Funcionário";
                }
                model.addRow(new Object[]{rst.getInt("idusuario"),rst.getString("nomeCompleto"),rst.getString("usuario"),rst.getString("senha"),permissaoTb,rst.getString("dataCadastro"),rst.getString("observacao")});
                while(rst.next()){
                    if(rst.getBoolean("permissao")){
                        permissaoTb="Administrador";
                    }
                    else{
                        permissaoTb="Funcionário";
                    }
                    model.addRow(new Object[]{rst.getInt("idusuario"),rst.getString("nomeCompleto"),rst.getString("usuario"),rst.getString("senha"),permissaoTb,rst.getString("dataCadastro"),rst.getString("observacao")});
                }
            }
            catch(SQLException e){
                JOptionPane.showMessageDialog(null,"Não foi encontrado nenhum usuário com esse nome!","ATENÇÃO",JOptionPane.INFORMATION_MESSAGE);
            }
        }
        else if(this.comboFormaPesquisa.getSelectedIndex()==2&&!this.campoNomeCod.getText().isEmpty()){
            int rowCount = dm.getRowCount();
            for (int i = rowCount - 1; i >= 0; i--) {
                dm.removeRow(i);
            }
            rst=this.usuarioController.buscarUsuario("null", Integer.parseInt(this.campoNomeCod.getText()));
            DefaultTableModel model = (DefaultTableModel) this.tbUsuario.getModel();
            try{
                if(rst.getBoolean("permissao")){
                    permissaoTb="Administrador";
                }
                else{
                    permissaoTb="Funcionário";
                }
                model.addRow(new Object[]{rst.getInt("idusuario"),rst.getString("nomeCompleto"),rst.getString("usuario"),rst.getString("senha"),permissaoTb,rst.getString("dataCadastro"),rst.getString("observacao")});
                while(rst.next()){
                    if(rst.getBoolean("permissao")){
                        permissaoTb="Administrador";
                    }
                    else{
                        permissaoTb="Funcionário";
                    }
                    model.addRow(new Object[]{rst.getInt("idusuario"),rst.getString("nomeCompleto"),rst.getString("usuario"),rst.getString("senha"),permissaoTb,rst.getString("dataCadastro"),rst.getString("observacao")});
                }
            }
            catch(SQLException e){
                JOptionPane.showMessageDialog(null,"Não foi encontrado nenhum usuário com esse código!","ATENÇÃO",JOptionPane.INFORMATION_MESSAGE);
            }
        }
        DefaultTableCellRenderer centerRenderer = new DefaultTableCellRenderer();
        centerRenderer.setHorizontalAlignment( JLabel.CENTER );
        for(int x=0;x<this.tbUsuario.getColumnCount();x++){
            this.tbUsuario.getColumnModel().getColumn(x).setCellRenderer( centerRenderer );
        }
    }//GEN-LAST:event_btBuscarFornecedorActionPerformed

    private void comboFormaPesquisaItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_comboFormaPesquisaItemStateChanged
        this.campoNomeCod.setText("");
        DefaultTableModel dm = (DefaultTableModel) this.tbUsuario.getModel();
        switch (this.comboFormaPesquisa.getSelectedIndex()) {
            case 0:
                this.campoNomeCod.setEnabled(false);
                this.lbFormaPesquisa.setText("Todos usuários");
                if(cont==0){
                    this.listarUsuarios(2);
                    cont++;
                }   break;
            case 1:
                {
                    int rowCount = dm.getRowCount();
                    for (int i = rowCount - 1; i >= 0; i--) {
                        dm.removeRow(i);
                    }       this.campoNomeCod.setEnabled(true);
                    this.lbFormaPesquisa.setText("Nome do usuário");
                    cont=0;
                    break;
                }
            default:
                {
                    int rowCount = dm.getRowCount();
                    for (int i = rowCount - 1; i >= 0; i--) {
                        dm.removeRow(i);
                    }       this.campoNomeCod.setEnabled(true);
                    this.lbFormaPesquisa.setText("Código do usuário");
                    cont=0;
                    break;
                }
        }
        DefaultTableCellRenderer centerRenderer = new DefaultTableCellRenderer();
        centerRenderer.setHorizontalAlignment( JLabel.CENTER );
        for(int x=0;x<this.tbUsuario.getColumnCount();x++){
            this.tbUsuario.getColumnModel().getColumn(x).setCellRenderer( centerRenderer );
        }
    }//GEN-LAST:event_comboFormaPesquisaItemStateChanged

    private void btSimRmv4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btSimRmv4ActionPerformed
        this.usuarioController.removerUsuario((Integer)this.tbUsuarioRmv.getValueAt(this.tbUsuarioRmv.getSelectedRow(),0));
        DefaultTableModel dm = (DefaultTableModel) this.tbUsuarioRmv.getModel();
        if(this.comboFormaRmv.getSelectedIndex()==0){
            int rowCount = dm.getRowCount();
            for (int i = rowCount - 1; i >= 0; i--) {
                dm.removeRow(i);
            }
            this.listarUsuarios(1);
        }
        else{
            int rowCount = dm.getRowCount();
            for (int i = rowCount - 1; i >= 0; i--) {
                dm.removeRow(i);
            }
        }
        JOptionPane.showMessageDialog(null,"Usuário removido com sucesso!","ATENÇÃO",JOptionPane.INFORMATION_MESSAGE);
        msgConfirmaRmv4.dispose();
    }//GEN-LAST:event_btSimRmv4ActionPerformed

    private void btNaoRmvActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btNaoRmvActionPerformed
        msgConfirmaRmv4.dispose();
    }//GEN-LAST:event_btNaoRmvActionPerformed

    private void campoSenhaAddKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_campoSenhaAddKeyReleased
        if(this.campoSenhaAdd.getPassword().length==0){
            this.btAdicionar.setEnabled(false);
        }
        else{
            this.btAdicionar.setEnabled(true);
        }
    }//GEN-LAST:event_campoSenhaAddKeyReleased

    private void btRmvUsuarioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btRmvUsuarioActionPerformed
        if(tbUsuarioRmv.getSelectedRowCount()>=1){
            this.msgConfirmaRmv4.setVisible(true);
        }
        else{
            JOptionPane.showMessageDialog(null,"Selecione um usuário!","ATENÇÃO",JOptionPane.INFORMATION_MESSAGE);
        }
    }//GEN-LAST:event_btRmvUsuarioActionPerformed

    private void tbUsuarioRmvMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tbUsuarioRmvMouseClicked
        if(this.tbUsuarioRmv.getSelectedRowCount()>0){
            this.btRmvUsuario.setEnabled(true);
        }
        else{
            this.btRmvUsuario.setEnabled(false);
        }
    }//GEN-LAST:event_tbUsuarioRmvMouseClicked

    private void btBuscarRmvActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btBuscarRmvActionPerformed
        DefaultTableModel dm = (DefaultTableModel) this.tbUsuarioRmv.getModel();
        if(this.comboFormaRmv.getSelectedIndex()==0&&this.tbUsuarioRmv.getRowCount()<0){
            this.listarUsuarios(1);
        }
        else if(this.comboFormaRmv.getSelectedIndex()==1&&!this.campoNomeCodRmv.getText().isEmpty()){
            int rowCount = dm.getRowCount();
            for (int i = rowCount - 1; i >= 0; i--) {
                dm.removeRow(i);
            }
            rst=this.usuarioController.buscarUsuario(this.campoNomeCodRmv.getText(), 0);
            DefaultTableModel model = (DefaultTableModel) this.tbUsuarioRmv.getModel();
            try{
                if(rst.getBoolean("permissao")){
                    permissaoTb="Administrador";
                }
                else{
                    permissaoTb="Funcionário";
                }
                model.addRow(new Object[]{rst.getInt("idusuario"),rst.getString("nomeCompleto"),rst.getString("usuario"),rst.getString("senha"),permissaoTb,rst.getString("dataCadastro"),rst.getString("observacao")});
                while(rst.next()){
                    if(rst.getBoolean("permissao")){
                        permissaoTb="Administrador";
                    }
                    else{
                        permissaoTb="Funcionário";
                    }
                    model.addRow(new Object[]{rst.getInt("idusuario"),rst.getString("nomeCompleto"),rst.getString("usuario"),rst.getString("senha"),permissaoTb,rst.getString("dataCadastro"),rst.getString("observacao")});
                }
            }
            catch(SQLException e){
                JOptionPane.showMessageDialog(null,"Não foi encontrado nenhum usuário com esse nome!","ATENÇÃO",JOptionPane.INFORMATION_MESSAGE);
            }
        }
        else if(this.comboFormaRmv.getSelectedIndex()==2&&!this.campoNomeCodRmv.getText().isEmpty()){
            int rowCount = dm.getRowCount();
            for (int i = rowCount - 1; i >= 0; i--) {
                dm.removeRow(i);
            }
            rst=this.usuarioController.buscarUsuario("null", Integer.parseInt(this.campoNomeCodRmv.getText()));
            DefaultTableModel model = (DefaultTableModel) this.tbUsuarioRmv.getModel();
            try{
                if(rst.getBoolean("permissao")){
                    permissaoTb="Administrador";
                }
                else{
                    permissaoTb="Funcionário";
                }
                model.addRow(new Object[]{rst.getInt("idusuario"),rst.getString("nomeCompleto"),rst.getString("usuario"),rst.getString("senha"),permissaoTb,rst.getString("dataCadastro"),rst.getString("observacao")});
                while(rst.next()){
                    if(rst.getBoolean("permissao")){
                        permissaoTb="Administrador";
                    }
                    else{
                        permissaoTb="Funcionário";
                    }
                    model.addRow(new Object[]{rst.getInt("idusuario"),rst.getString("nomeCompleto"),rst.getString("usuario"),rst.getString("senha"),permissaoTb,rst.getString("dataCadastro"),rst.getString("observacao")});
                }
            }
            catch(SQLException e){
                JOptionPane.showMessageDialog(null,"Não foi encontrado nenhum usuário com esse código!","ATENÇÃO",JOptionPane.INFORMATION_MESSAGE);
            }
        }
        DefaultTableCellRenderer centerRenderer = new DefaultTableCellRenderer();
        centerRenderer.setHorizontalAlignment( JLabel.CENTER );
        for(int x=0;x<this.tbUsuarioRmv.getColumnCount();x++){
            this.tbUsuarioRmv.getColumnModel().getColumn(x).setCellRenderer( centerRenderer );
        }
    }//GEN-LAST:event_btBuscarRmvActionPerformed

    private void comboFormaRmvItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_comboFormaRmvItemStateChanged
        this.campoNomeCodRmv.setText("");
        DefaultTableModel dm = (DefaultTableModel) this.tbUsuarioRmv.getModel();
        switch (this.comboFormaRmv.getSelectedIndex()) {
            case 0:
                this.campoNomeCodRmv.setEnabled(false);
                this.lbFormaPesquisaRmv.setText("Todos usuários");
                if(cont==0){
                    this.listarUsuarios(1);
                    cont++;
                }   this.btRmvUsuario.setEnabled(false);
                break;
            case 1:
                {
                    int rowCount = dm.getRowCount();
                    for (int i = rowCount - 1; i >= 0; i--) {
                        dm.removeRow(i);
                    }       this.campoNomeCodRmv.setEnabled(true);
                    this.lbFormaPesquisaRmv.setText("Nome do usuário");
                    cont=0;
                    this.btRmvUsuario.setEnabled(false);
                    break;
                }
            default:
                {
                    int rowCount = dm.getRowCount();
                    for (int i = rowCount - 1; i >= 0; i--) {
                        dm.removeRow(i);
                    }       this.campoNomeCodRmv.setEnabled(true);
                    this.lbFormaPesquisaRmv.setText("Código do usuário");
                    cont=0;
                    this.btRmvUsuario.setEnabled(false);
                    break;
                }
        }
        DefaultTableCellRenderer centerRenderer = new DefaultTableCellRenderer();
        centerRenderer.setHorizontalAlignment( JLabel.CENTER );
        for(int x=0;x<this.tbUsuarioRmv.getColumnCount();x++){
            this.tbUsuarioRmv.getColumnModel().getColumn(x).setCellRenderer( centerRenderer );
        }
    }//GEN-LAST:event_comboFormaRmvItemStateChanged

    private void campoNomeAddKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_campoNomeAddKeyTyped
        char c = evt.getKeyChar();
        if(!(Character.isAlphabetic(c) || c == evt.VK_SPACE ||  c==evt.VK_DELETE ))
            evt.consume();
    }//GEN-LAST:event_campoNomeAddKeyTyped

    private void campoNomeCodRmvKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_campoNomeCodRmvKeyTyped
        char c = evt.getKeyChar();
        if(this.lbFormaPesquisaRmv.getText().equals("Nome do usuário")){
            if(!(Character.isAlphabetic(c) || c == evt.VK_SPACE ||  c==evt.VK_DELETE ))
                evt.consume();
        }
        else if(this.lbFormaPesquisaRmv.getText().equals("Código do usuário")){
            if (!((c >= '0') && (c <= '9') || (c == KeyEvent.VK_BACK_SPACE) || (c == KeyEvent.VK_DELETE))) {
                evt.consume();
            }
        }
    }//GEN-LAST:event_campoNomeCodRmvKeyTyped

    private void campoNomeCodAltKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_campoNomeCodAltKeyTyped
        char c = evt.getKeyChar();
        if(this.lbFormaPesquisaAlt.getText().equals("Nome do usuário")){
            if(!(Character.isAlphabetic(c) || c == evt.VK_SPACE ||  c==evt.VK_DELETE ))
                evt.consume();
        }
        else if(this.lbFormaPesquisaAlt.getText().equals("Código do usuário")){
            if (!((c >= '0') && (c <= '9') || (c == KeyEvent.VK_BACK_SPACE) || (c == KeyEvent.VK_DELETE))) {
                evt.consume();
            }
        }
    }//GEN-LAST:event_campoNomeCodAltKeyTyped

    private void campoNomeCodKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_campoNomeCodKeyTyped
        char c = evt.getKeyChar();
        if(this.lbFormaPesquisa.getText().equals("Nome do usuário")){
            if(!(Character.isAlphabetic(c) || c == evt.VK_SPACE ||  c==evt.VK_DELETE ))
                evt.consume();
        }
        else if(this.lbFormaPesquisa.getText().equals("Código do usuário")){
            if (!((c >= '0') && (c <= '9') || (c == KeyEvent.VK_BACK_SPACE) || (c == KeyEvent.VK_DELETE))) {
                evt.consume();
            }
        }
    }//GEN-LAST:event_campoNomeCodKeyTyped

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(InterfaceUsuario.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(InterfaceUsuario.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(InterfaceUsuario.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(InterfaceUsuario.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            new InterfaceUsuario().setVisible(true);
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btAddUsuario;
    private javax.swing.JButton btAdicionar;
    private javax.swing.JButton btAlterarUsuario;
    private javax.swing.JButton btBuscarAlt;
    private javax.swing.JButton btBuscarFornecedor;
    private javax.swing.JButton btBuscarRmv;
    private javax.swing.JButton btConsultarUsuario;
    private javax.swing.JButton btLimparAdd;
    private javax.swing.JButton btNaoRmv;
    private javax.swing.JButton btRemoverUsuario;
    private javax.swing.JButton btRmvUsuario;
    private javax.swing.JButton btSimRmv4;
    private javax.swing.JButton btVoltar;
    private javax.swing.JTextArea campoDescricaoAdd;
    private javax.swing.JTextField campoNomeAdd;
    private javax.swing.JTextField campoNomeCod;
    private javax.swing.JTextField campoNomeCodAlt;
    private javax.swing.JTextField campoNomeCodRmv;
    private javax.swing.JPasswordField campoSenhaAdd;
    private javax.swing.JTextField campoUsuarioAdd;
    private javax.swing.JComboBox<String> comboFormaAlt;
    private javax.swing.JComboBox<String> comboFormaPesquisa;
    private javax.swing.JComboBox<String> comboFormaRmv;
    private javax.swing.JComboBox<String> comboPermissao;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JLabel lbFormaPesquisa;
    private javax.swing.JLabel lbFormaPesquisaAlt;
    private javax.swing.JLabel lbFormaPesquisaRmv;
    private javax.swing.JDialog msgConfirmaRmv4;
    private javax.swing.JPanel painelAddUsuario;
    private javax.swing.JPanel painelAltUsuario;
    private javax.swing.JLayeredPane painelCamadaUsuario;
    private javax.swing.JPanel painelPsqUsuario;
    private javax.swing.JPanel painelRmvUsuario;
    private javax.swing.JPanel painelSair4;
    private javax.swing.JPanel painelUsuario;
    private javax.swing.JTable tbUsuario;
    private javax.swing.JTable tbUsuarioAlt;
    private javax.swing.JTable tbUsuarioRmv;
    // End of variables declaration//GEN-END:variables
}
